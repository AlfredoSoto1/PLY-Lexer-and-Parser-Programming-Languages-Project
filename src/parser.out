Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    NEWLINE
    WHITESPACE

Grammar

Rule 0     S' -> prog
Rule 1     prog -> decl_list stmt_list
Rule 2     decl_list -> empty
Rule 3     decl_list -> decl_list decl
Rule 4     empty -> <empty>
Rule 5     decl -> type var_list S
Rule 6     stmt_list -> stmt_list stmt
Rule 7     stmt_list -> stmt
Rule 8     stmt -> IF RO exp RC stmt
Rule 9     stmt -> ELSE stmt
Rule 10    stmt -> WHILE RO exp RC stmt
Rule 11    stmt -> assignment
Rule 12    stmt -> PRINT exp S
Rule 13    stmt -> BO stmt_list BC
Rule 14    assignment -> id EQ exp S
Rule 15    type -> INT_TYPE
Rule 16    type -> DOUBLE_TYPE
Rule 17    var_list -> var
Rule 18    var_list -> var_list CM var
Rule 19    var -> ID array
Rule 20    array -> empty
Rule 21    array -> SO INT SC array
Rule 22    id_array -> SO INT SC id_array
Rule 23    id_array -> SO id SC id_array
Rule 24    id_array -> empty
Rule 25    id -> ID
Rule 26    id -> ID id_array
Rule 27    exp -> exp AND exp
Rule 28    exp -> exp OR exp
Rule 29    exp -> NOT exp
Rule 30    exp -> exp EQ EQ exp
Rule 31    exp -> exp MIN exp
Rule 32    exp -> exp MAJ exp
Rule 33    exp -> exp MAJ_EQ exp
Rule 34    exp -> exp MIN_EQ exp
Rule 35    exp -> exp PLUS exp
Rule 36    exp -> exp MINUS exp
Rule 37    exp -> exp STAR exp
Rule 38    exp -> exp DIV exp
Rule 39    exp -> exp UMINUS
Rule 40    exp -> exp MINUS_ID
Rule 41    exp -> RO exp RC
Rule 42    exp -> id
Rule 43    exp -> INT
Rule 44    exp -> DOUBLE
Rule 45    exp -> UMINUS
Rule 46    exp -> MINUS_ID

Terminals, with rules where they appear

AND                  : 27
BC                   : 13
BO                   : 13
CM                   : 18
COMMENT              : 
DIV                  : 38
DOUBLE               : 44
DOUBLE_TYPE          : 16
ELSE                 : 9
EQ                   : 14 30 30
ID                   : 19 25 26
IF                   : 8
INT                  : 21 22 43
INT_TYPE             : 15
MAJ                  : 32
MAJ_EQ               : 33
MIN                  : 31
MINUS                : 36
MINUS_ID             : 40 46
MIN_EQ               : 34
NEWLINE              : 
NOT                  : 29
OR                   : 28
PLUS                 : 35
PRINT                : 12
RC                   : 8 10 41
RO                   : 8 10 41
S                    : 5 12 14
SC                   : 21 22 23
SO                   : 21 22 23
STAR                 : 37
UMINUS               : 39 45
WHILE                : 10
WHITESPACE           : 
error                : 

Nonterminals, with rules where they appear

array                : 19 21
assignment           : 11
decl                 : 3
decl_list            : 1 3
empty                : 2 20 24
exp                  : 8 10 12 14 27 27 28 28 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 40 41
id                   : 14 23 42
id_array             : 22 23 26
prog                 : 0
stmt                 : 6 7 8 9 10
stmt_list            : 1 6 13
type                 : 5
var                  : 17 18
var_list             : 5 18

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . decl_list stmt_list
    (2) decl_list -> . empty
    (3) decl_list -> . decl_list decl
    (4) empty -> .

    IF              reduce using rule 4 (empty -> .)
    ELSE            reduce using rule 4 (empty -> .)
    WHILE           reduce using rule 4 (empty -> .)
    PRINT           reduce using rule 4 (empty -> .)
    BO              reduce using rule 4 (empty -> .)
    INT_TYPE        reduce using rule 4 (empty -> .)
    DOUBLE_TYPE     reduce using rule 4 (empty -> .)
    ID              reduce using rule 4 (empty -> .)

    prog                           shift and go to state 1
    decl_list                      shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> prog .



state 2

    (1) prog -> decl_list . stmt_list
    (3) decl_list -> decl_list . decl
    (6) stmt_list -> . stmt_list stmt
    (7) stmt_list -> . stmt
    (5) decl -> . type var_list S
    (8) stmt -> . IF RO exp RC stmt
    (9) stmt -> . ELSE stmt
    (10) stmt -> . WHILE RO exp RC stmt
    (11) stmt -> . assignment
    (12) stmt -> . PRINT exp S
    (13) stmt -> . BO stmt_list BC
    (15) type -> . INT_TYPE
    (16) type -> . DOUBLE_TYPE
    (14) assignment -> . id EQ exp S
    (25) id -> . ID
    (26) id -> . ID id_array

    IF              shift and go to state 8
    ELSE            shift and go to state 9
    WHILE           shift and go to state 10
    PRINT           shift and go to state 12
    BO              shift and go to state 13
    INT_TYPE        shift and go to state 14
    DOUBLE_TYPE     shift and go to state 15
    ID              shift and go to state 17

    stmt_list                      shift and go to state 4
    decl                           shift and go to state 5
    stmt                           shift and go to state 6
    type                           shift and go to state 7
    assignment                     shift and go to state 11
    id                             shift and go to state 16

state 3

    (2) decl_list -> empty .

    IF              reduce using rule 2 (decl_list -> empty .)
    ELSE            reduce using rule 2 (decl_list -> empty .)
    WHILE           reduce using rule 2 (decl_list -> empty .)
    PRINT           reduce using rule 2 (decl_list -> empty .)
    BO              reduce using rule 2 (decl_list -> empty .)
    INT_TYPE        reduce using rule 2 (decl_list -> empty .)
    DOUBLE_TYPE     reduce using rule 2 (decl_list -> empty .)
    ID              reduce using rule 2 (decl_list -> empty .)


state 4

    (1) prog -> decl_list stmt_list .
    (6) stmt_list -> stmt_list . stmt
    (8) stmt -> . IF RO exp RC stmt
    (9) stmt -> . ELSE stmt
    (10) stmt -> . WHILE RO exp RC stmt
    (11) stmt -> . assignment
    (12) stmt -> . PRINT exp S
    (13) stmt -> . BO stmt_list BC
    (14) assignment -> . id EQ exp S
    (25) id -> . ID
    (26) id -> . ID id_array

    $end            reduce using rule 1 (prog -> decl_list stmt_list .)
    IF              shift and go to state 8
    ELSE            shift and go to state 9
    WHILE           shift and go to state 10
    PRINT           shift and go to state 12
    BO              shift and go to state 13
    ID              shift and go to state 17

    stmt                           shift and go to state 18
    assignment                     shift and go to state 11
    id                             shift and go to state 16

state 5

    (3) decl_list -> decl_list decl .

    IF              reduce using rule 3 (decl_list -> decl_list decl .)
    ELSE            reduce using rule 3 (decl_list -> decl_list decl .)
    WHILE           reduce using rule 3 (decl_list -> decl_list decl .)
    PRINT           reduce using rule 3 (decl_list -> decl_list decl .)
    BO              reduce using rule 3 (decl_list -> decl_list decl .)
    INT_TYPE        reduce using rule 3 (decl_list -> decl_list decl .)
    DOUBLE_TYPE     reduce using rule 3 (decl_list -> decl_list decl .)
    ID              reduce using rule 3 (decl_list -> decl_list decl .)


state 6

    (7) stmt_list -> stmt .

    IF              reduce using rule 7 (stmt_list -> stmt .)
    ELSE            reduce using rule 7 (stmt_list -> stmt .)
    WHILE           reduce using rule 7 (stmt_list -> stmt .)
    PRINT           reduce using rule 7 (stmt_list -> stmt .)
    BO              reduce using rule 7 (stmt_list -> stmt .)
    ID              reduce using rule 7 (stmt_list -> stmt .)
    $end            reduce using rule 7 (stmt_list -> stmt .)
    BC              reduce using rule 7 (stmt_list -> stmt .)


state 7

    (5) decl -> type . var_list S
    (17) var_list -> . var
    (18) var_list -> . var_list CM var
    (19) var -> . ID array

    ID              shift and go to state 21

    var_list                       shift and go to state 19
    var                            shift and go to state 20

state 8

    (8) stmt -> IF . RO exp RC stmt

    RO              shift and go to state 22


state 9

    (9) stmt -> ELSE . stmt
    (8) stmt -> . IF RO exp RC stmt
    (9) stmt -> . ELSE stmt
    (10) stmt -> . WHILE RO exp RC stmt
    (11) stmt -> . assignment
    (12) stmt -> . PRINT exp S
    (13) stmt -> . BO stmt_list BC
    (14) assignment -> . id EQ exp S
    (25) id -> . ID
    (26) id -> . ID id_array

    IF              shift and go to state 8
    ELSE            shift and go to state 9
    WHILE           shift and go to state 10
    PRINT           shift and go to state 12
    BO              shift and go to state 13
    ID              shift and go to state 17

    stmt                           shift and go to state 23
    assignment                     shift and go to state 11
    id                             shift and go to state 16

state 10

    (10) stmt -> WHILE . RO exp RC stmt

    RO              shift and go to state 24


state 11

    (11) stmt -> assignment .

    IF              reduce using rule 11 (stmt -> assignment .)
    ELSE            reduce using rule 11 (stmt -> assignment .)
    WHILE           reduce using rule 11 (stmt -> assignment .)
    PRINT           reduce using rule 11 (stmt -> assignment .)
    BO              reduce using rule 11 (stmt -> assignment .)
    ID              reduce using rule 11 (stmt -> assignment .)
    $end            reduce using rule 11 (stmt -> assignment .)
    BC              reduce using rule 11 (stmt -> assignment .)


state 12

    (12) stmt -> PRINT . exp S
    (27) exp -> . exp AND exp
    (28) exp -> . exp OR exp
    (29) exp -> . NOT exp
    (30) exp -> . exp EQ EQ exp
    (31) exp -> . exp MIN exp
    (32) exp -> . exp MAJ exp
    (33) exp -> . exp MAJ_EQ exp
    (34) exp -> . exp MIN_EQ exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp STAR exp
    (38) exp -> . exp DIV exp
    (39) exp -> . exp UMINUS
    (40) exp -> . exp MINUS_ID
    (41) exp -> . RO exp RC
    (42) exp -> . id
    (43) exp -> . INT
    (44) exp -> . DOUBLE
    (45) exp -> . UMINUS
    (46) exp -> . MINUS_ID
    (25) id -> . ID
    (26) id -> . ID id_array

    NOT             shift and go to state 26
    RO              shift and go to state 29
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    UMINUS          shift and go to state 27
    MINUS_ID        shift and go to state 28
    ID              shift and go to state 17

    exp                            shift and go to state 25
    id                             shift and go to state 30

state 13

    (13) stmt -> BO . stmt_list BC
    (6) stmt_list -> . stmt_list stmt
    (7) stmt_list -> . stmt
    (8) stmt -> . IF RO exp RC stmt
    (9) stmt -> . ELSE stmt
    (10) stmt -> . WHILE RO exp RC stmt
    (11) stmt -> . assignment
    (12) stmt -> . PRINT exp S
    (13) stmt -> . BO stmt_list BC
    (14) assignment -> . id EQ exp S
    (25) id -> . ID
    (26) id -> . ID id_array

    IF              shift and go to state 8
    ELSE            shift and go to state 9
    WHILE           shift and go to state 10
    PRINT           shift and go to state 12
    BO              shift and go to state 13
    ID              shift and go to state 17

    stmt_list                      shift and go to state 33
    stmt                           shift and go to state 6
    assignment                     shift and go to state 11
    id                             shift and go to state 16

state 14

    (15) type -> INT_TYPE .

    ID              reduce using rule 15 (type -> INT_TYPE .)


state 15

    (16) type -> DOUBLE_TYPE .

    ID              reduce using rule 16 (type -> DOUBLE_TYPE .)


state 16

    (14) assignment -> id . EQ exp S

    EQ              shift and go to state 34


state 17

    (25) id -> ID .
    (26) id -> ID . id_array
    (22) id_array -> . SO INT SC id_array
    (23) id_array -> . SO id SC id_array
    (24) id_array -> . empty
    (4) empty -> .

  ! reduce/reduce conflict for EQ resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for S resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for AND resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for OR resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for MIN resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for MAJ resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for MAJ_EQ resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for MIN_EQ resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for STAR resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for DIV resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for UMINUS resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for MINUS_ID resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for RC resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for SC resolved using rule 4 (empty -> .)
    SO              shift and go to state 36
    EQ              reduce using rule 4 (empty -> .)
    S               reduce using rule 4 (empty -> .)
    AND             reduce using rule 4 (empty -> .)
    OR              reduce using rule 4 (empty -> .)
    MIN             reduce using rule 4 (empty -> .)
    MAJ             reduce using rule 4 (empty -> .)
    MAJ_EQ          reduce using rule 4 (empty -> .)
    MIN_EQ          reduce using rule 4 (empty -> .)
    PLUS            reduce using rule 4 (empty -> .)
    MINUS           reduce using rule 4 (empty -> .)
    STAR            reduce using rule 4 (empty -> .)
    DIV             reduce using rule 4 (empty -> .)
    UMINUS          reduce using rule 4 (empty -> .)
    MINUS_ID        reduce using rule 4 (empty -> .)
    RC              reduce using rule 4 (empty -> .)
    SC              reduce using rule 4 (empty -> .)

  ! EQ              [ reduce using rule 25 (id -> ID .) ]
  ! S               [ reduce using rule 25 (id -> ID .) ]
  ! AND             [ reduce using rule 25 (id -> ID .) ]
  ! OR              [ reduce using rule 25 (id -> ID .) ]
  ! MIN             [ reduce using rule 25 (id -> ID .) ]
  ! MAJ             [ reduce using rule 25 (id -> ID .) ]
  ! MAJ_EQ          [ reduce using rule 25 (id -> ID .) ]
  ! MIN_EQ          [ reduce using rule 25 (id -> ID .) ]
  ! PLUS            [ reduce using rule 25 (id -> ID .) ]
  ! MINUS           [ reduce using rule 25 (id -> ID .) ]
  ! STAR            [ reduce using rule 25 (id -> ID .) ]
  ! DIV             [ reduce using rule 25 (id -> ID .) ]
  ! UMINUS          [ reduce using rule 25 (id -> ID .) ]
  ! MINUS_ID        [ reduce using rule 25 (id -> ID .) ]
  ! RC              [ reduce using rule 25 (id -> ID .) ]
  ! SC              [ reduce using rule 25 (id -> ID .) ]

    id_array                       shift and go to state 35
    empty                          shift and go to state 37

state 18

    (6) stmt_list -> stmt_list stmt .

    IF              reduce using rule 6 (stmt_list -> stmt_list stmt .)
    ELSE            reduce using rule 6 (stmt_list -> stmt_list stmt .)
    WHILE           reduce using rule 6 (stmt_list -> stmt_list stmt .)
    PRINT           reduce using rule 6 (stmt_list -> stmt_list stmt .)
    BO              reduce using rule 6 (stmt_list -> stmt_list stmt .)
    ID              reduce using rule 6 (stmt_list -> stmt_list stmt .)
    $end            reduce using rule 6 (stmt_list -> stmt_list stmt .)
    BC              reduce using rule 6 (stmt_list -> stmt_list stmt .)


state 19

    (5) decl -> type var_list . S
    (18) var_list -> var_list . CM var

    S               shift and go to state 38
    CM              shift and go to state 39


state 20

    (17) var_list -> var .

    S               reduce using rule 17 (var_list -> var .)
    CM              reduce using rule 17 (var_list -> var .)


state 21

    (19) var -> ID . array
    (20) array -> . empty
    (21) array -> . SO INT SC array
    (4) empty -> .

    SO              shift and go to state 42
    S               reduce using rule 4 (empty -> .)
    CM              reduce using rule 4 (empty -> .)

    array                          shift and go to state 40
    empty                          shift and go to state 41

state 22

    (8) stmt -> IF RO . exp RC stmt
    (27) exp -> . exp AND exp
    (28) exp -> . exp OR exp
    (29) exp -> . NOT exp
    (30) exp -> . exp EQ EQ exp
    (31) exp -> . exp MIN exp
    (32) exp -> . exp MAJ exp
    (33) exp -> . exp MAJ_EQ exp
    (34) exp -> . exp MIN_EQ exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp STAR exp
    (38) exp -> . exp DIV exp
    (39) exp -> . exp UMINUS
    (40) exp -> . exp MINUS_ID
    (41) exp -> . RO exp RC
    (42) exp -> . id
    (43) exp -> . INT
    (44) exp -> . DOUBLE
    (45) exp -> . UMINUS
    (46) exp -> . MINUS_ID
    (25) id -> . ID
    (26) id -> . ID id_array

    NOT             shift and go to state 26
    RO              shift and go to state 29
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    UMINUS          shift and go to state 27
    MINUS_ID        shift and go to state 28
    ID              shift and go to state 17

    exp                            shift and go to state 43
    id                             shift and go to state 30

state 23

    (9) stmt -> ELSE stmt .

    IF              reduce using rule 9 (stmt -> ELSE stmt .)
    ELSE            reduce using rule 9 (stmt -> ELSE stmt .)
    WHILE           reduce using rule 9 (stmt -> ELSE stmt .)
    PRINT           reduce using rule 9 (stmt -> ELSE stmt .)
    BO              reduce using rule 9 (stmt -> ELSE stmt .)
    ID              reduce using rule 9 (stmt -> ELSE stmt .)
    $end            reduce using rule 9 (stmt -> ELSE stmt .)
    BC              reduce using rule 9 (stmt -> ELSE stmt .)


state 24

    (10) stmt -> WHILE RO . exp RC stmt
    (27) exp -> . exp AND exp
    (28) exp -> . exp OR exp
    (29) exp -> . NOT exp
    (30) exp -> . exp EQ EQ exp
    (31) exp -> . exp MIN exp
    (32) exp -> . exp MAJ exp
    (33) exp -> . exp MAJ_EQ exp
    (34) exp -> . exp MIN_EQ exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp STAR exp
    (38) exp -> . exp DIV exp
    (39) exp -> . exp UMINUS
    (40) exp -> . exp MINUS_ID
    (41) exp -> . RO exp RC
    (42) exp -> . id
    (43) exp -> . INT
    (44) exp -> . DOUBLE
    (45) exp -> . UMINUS
    (46) exp -> . MINUS_ID
    (25) id -> . ID
    (26) id -> . ID id_array

    NOT             shift and go to state 26
    RO              shift and go to state 29
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    UMINUS          shift and go to state 27
    MINUS_ID        shift and go to state 28
    ID              shift and go to state 17

    exp                            shift and go to state 44
    id                             shift and go to state 30

state 25

    (12) stmt -> PRINT exp . S
    (27) exp -> exp . AND exp
    (28) exp -> exp . OR exp
    (30) exp -> exp . EQ EQ exp
    (31) exp -> exp . MIN exp
    (32) exp -> exp . MAJ exp
    (33) exp -> exp . MAJ_EQ exp
    (34) exp -> exp . MIN_EQ exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . STAR exp
    (38) exp -> exp . DIV exp
    (39) exp -> exp . UMINUS
    (40) exp -> exp . MINUS_ID

    S               shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    EQ              shift and go to state 48
    MIN             shift and go to state 49
    MAJ             shift and go to state 50
    MAJ_EQ          shift and go to state 51
    MIN_EQ          shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    STAR            shift and go to state 55
    DIV             shift and go to state 56
    UMINUS          shift and go to state 57
    MINUS_ID        shift and go to state 58


state 26

    (29) exp -> NOT . exp
    (27) exp -> . exp AND exp
    (28) exp -> . exp OR exp
    (29) exp -> . NOT exp
    (30) exp -> . exp EQ EQ exp
    (31) exp -> . exp MIN exp
    (32) exp -> . exp MAJ exp
    (33) exp -> . exp MAJ_EQ exp
    (34) exp -> . exp MIN_EQ exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp STAR exp
    (38) exp -> . exp DIV exp
    (39) exp -> . exp UMINUS
    (40) exp -> . exp MINUS_ID
    (41) exp -> . RO exp RC
    (42) exp -> . id
    (43) exp -> . INT
    (44) exp -> . DOUBLE
    (45) exp -> . UMINUS
    (46) exp -> . MINUS_ID
    (25) id -> . ID
    (26) id -> . ID id_array

    NOT             shift and go to state 26
    RO              shift and go to state 29
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    UMINUS          shift and go to state 27
    MINUS_ID        shift and go to state 28
    ID              shift and go to state 17

    exp                            shift and go to state 59
    id                             shift and go to state 30

state 27

    (45) exp -> UMINUS .

    S               reduce using rule 45 (exp -> UMINUS .)
    AND             reduce using rule 45 (exp -> UMINUS .)
    OR              reduce using rule 45 (exp -> UMINUS .)
    EQ              reduce using rule 45 (exp -> UMINUS .)
    MIN             reduce using rule 45 (exp -> UMINUS .)
    MAJ             reduce using rule 45 (exp -> UMINUS .)
    MAJ_EQ          reduce using rule 45 (exp -> UMINUS .)
    MIN_EQ          reduce using rule 45 (exp -> UMINUS .)
    PLUS            reduce using rule 45 (exp -> UMINUS .)
    MINUS           reduce using rule 45 (exp -> UMINUS .)
    STAR            reduce using rule 45 (exp -> UMINUS .)
    DIV             reduce using rule 45 (exp -> UMINUS .)
    UMINUS          reduce using rule 45 (exp -> UMINUS .)
    MINUS_ID        reduce using rule 45 (exp -> UMINUS .)
    RC              reduce using rule 45 (exp -> UMINUS .)


state 28

    (46) exp -> MINUS_ID .

    S               reduce using rule 46 (exp -> MINUS_ID .)
    AND             reduce using rule 46 (exp -> MINUS_ID .)
    OR              reduce using rule 46 (exp -> MINUS_ID .)
    EQ              reduce using rule 46 (exp -> MINUS_ID .)
    MIN             reduce using rule 46 (exp -> MINUS_ID .)
    MAJ             reduce using rule 46 (exp -> MINUS_ID .)
    MAJ_EQ          reduce using rule 46 (exp -> MINUS_ID .)
    MIN_EQ          reduce using rule 46 (exp -> MINUS_ID .)
    PLUS            reduce using rule 46 (exp -> MINUS_ID .)
    MINUS           reduce using rule 46 (exp -> MINUS_ID .)
    STAR            reduce using rule 46 (exp -> MINUS_ID .)
    DIV             reduce using rule 46 (exp -> MINUS_ID .)
    UMINUS          reduce using rule 46 (exp -> MINUS_ID .)
    MINUS_ID        reduce using rule 46 (exp -> MINUS_ID .)
    RC              reduce using rule 46 (exp -> MINUS_ID .)


state 29

    (41) exp -> RO . exp RC
    (27) exp -> . exp AND exp
    (28) exp -> . exp OR exp
    (29) exp -> . NOT exp
    (30) exp -> . exp EQ EQ exp
    (31) exp -> . exp MIN exp
    (32) exp -> . exp MAJ exp
    (33) exp -> . exp MAJ_EQ exp
    (34) exp -> . exp MIN_EQ exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp STAR exp
    (38) exp -> . exp DIV exp
    (39) exp -> . exp UMINUS
    (40) exp -> . exp MINUS_ID
    (41) exp -> . RO exp RC
    (42) exp -> . id
    (43) exp -> . INT
    (44) exp -> . DOUBLE
    (45) exp -> . UMINUS
    (46) exp -> . MINUS_ID
    (25) id -> . ID
    (26) id -> . ID id_array

    NOT             shift and go to state 26
    RO              shift and go to state 29
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    UMINUS          shift and go to state 27
    MINUS_ID        shift and go to state 28
    ID              shift and go to state 17

    exp                            shift and go to state 60
    id                             shift and go to state 30

state 30

    (42) exp -> id .

    S               reduce using rule 42 (exp -> id .)
    AND             reduce using rule 42 (exp -> id .)
    OR              reduce using rule 42 (exp -> id .)
    EQ              reduce using rule 42 (exp -> id .)
    MIN             reduce using rule 42 (exp -> id .)
    MAJ             reduce using rule 42 (exp -> id .)
    MAJ_EQ          reduce using rule 42 (exp -> id .)
    MIN_EQ          reduce using rule 42 (exp -> id .)
    PLUS            reduce using rule 42 (exp -> id .)
    MINUS           reduce using rule 42 (exp -> id .)
    STAR            reduce using rule 42 (exp -> id .)
    DIV             reduce using rule 42 (exp -> id .)
    UMINUS          reduce using rule 42 (exp -> id .)
    MINUS_ID        reduce using rule 42 (exp -> id .)
    RC              reduce using rule 42 (exp -> id .)


state 31

    (43) exp -> INT .

    S               reduce using rule 43 (exp -> INT .)
    AND             reduce using rule 43 (exp -> INT .)
    OR              reduce using rule 43 (exp -> INT .)
    EQ              reduce using rule 43 (exp -> INT .)
    MIN             reduce using rule 43 (exp -> INT .)
    MAJ             reduce using rule 43 (exp -> INT .)
    MAJ_EQ          reduce using rule 43 (exp -> INT .)
    MIN_EQ          reduce using rule 43 (exp -> INT .)
    PLUS            reduce using rule 43 (exp -> INT .)
    MINUS           reduce using rule 43 (exp -> INT .)
    STAR            reduce using rule 43 (exp -> INT .)
    DIV             reduce using rule 43 (exp -> INT .)
    UMINUS          reduce using rule 43 (exp -> INT .)
    MINUS_ID        reduce using rule 43 (exp -> INT .)
    RC              reduce using rule 43 (exp -> INT .)


state 32

    (44) exp -> DOUBLE .

    S               reduce using rule 44 (exp -> DOUBLE .)
    AND             reduce using rule 44 (exp -> DOUBLE .)
    OR              reduce using rule 44 (exp -> DOUBLE .)
    EQ              reduce using rule 44 (exp -> DOUBLE .)
    MIN             reduce using rule 44 (exp -> DOUBLE .)
    MAJ             reduce using rule 44 (exp -> DOUBLE .)
    MAJ_EQ          reduce using rule 44 (exp -> DOUBLE .)
    MIN_EQ          reduce using rule 44 (exp -> DOUBLE .)
    PLUS            reduce using rule 44 (exp -> DOUBLE .)
    MINUS           reduce using rule 44 (exp -> DOUBLE .)
    STAR            reduce using rule 44 (exp -> DOUBLE .)
    DIV             reduce using rule 44 (exp -> DOUBLE .)
    UMINUS          reduce using rule 44 (exp -> DOUBLE .)
    MINUS_ID        reduce using rule 44 (exp -> DOUBLE .)
    RC              reduce using rule 44 (exp -> DOUBLE .)


state 33

    (13) stmt -> BO stmt_list . BC
    (6) stmt_list -> stmt_list . stmt
    (8) stmt -> . IF RO exp RC stmt
    (9) stmt -> . ELSE stmt
    (10) stmt -> . WHILE RO exp RC stmt
    (11) stmt -> . assignment
    (12) stmt -> . PRINT exp S
    (13) stmt -> . BO stmt_list BC
    (14) assignment -> . id EQ exp S
    (25) id -> . ID
    (26) id -> . ID id_array

    BC              shift and go to state 61
    IF              shift and go to state 8
    ELSE            shift and go to state 9
    WHILE           shift and go to state 10
    PRINT           shift and go to state 12
    BO              shift and go to state 13
    ID              shift and go to state 17

    stmt                           shift and go to state 18
    assignment                     shift and go to state 11
    id                             shift and go to state 16

state 34

    (14) assignment -> id EQ . exp S
    (27) exp -> . exp AND exp
    (28) exp -> . exp OR exp
    (29) exp -> . NOT exp
    (30) exp -> . exp EQ EQ exp
    (31) exp -> . exp MIN exp
    (32) exp -> . exp MAJ exp
    (33) exp -> . exp MAJ_EQ exp
    (34) exp -> . exp MIN_EQ exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp STAR exp
    (38) exp -> . exp DIV exp
    (39) exp -> . exp UMINUS
    (40) exp -> . exp MINUS_ID
    (41) exp -> . RO exp RC
    (42) exp -> . id
    (43) exp -> . INT
    (44) exp -> . DOUBLE
    (45) exp -> . UMINUS
    (46) exp -> . MINUS_ID
    (25) id -> . ID
    (26) id -> . ID id_array

    NOT             shift and go to state 26
    RO              shift and go to state 29
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    UMINUS          shift and go to state 27
    MINUS_ID        shift and go to state 28
    ID              shift and go to state 17

    id                             shift and go to state 30
    exp                            shift and go to state 62

state 35

    (26) id -> ID id_array .

    EQ              reduce using rule 26 (id -> ID id_array .)
    S               reduce using rule 26 (id -> ID id_array .)
    AND             reduce using rule 26 (id -> ID id_array .)
    OR              reduce using rule 26 (id -> ID id_array .)
    MIN             reduce using rule 26 (id -> ID id_array .)
    MAJ             reduce using rule 26 (id -> ID id_array .)
    MAJ_EQ          reduce using rule 26 (id -> ID id_array .)
    MIN_EQ          reduce using rule 26 (id -> ID id_array .)
    PLUS            reduce using rule 26 (id -> ID id_array .)
    MINUS           reduce using rule 26 (id -> ID id_array .)
    STAR            reduce using rule 26 (id -> ID id_array .)
    DIV             reduce using rule 26 (id -> ID id_array .)
    UMINUS          reduce using rule 26 (id -> ID id_array .)
    MINUS_ID        reduce using rule 26 (id -> ID id_array .)
    RC              reduce using rule 26 (id -> ID id_array .)
    SC              reduce using rule 26 (id -> ID id_array .)


state 36

    (22) id_array -> SO . INT SC id_array
    (23) id_array -> SO . id SC id_array
    (25) id -> . ID
    (26) id -> . ID id_array

    INT             shift and go to state 63
    ID              shift and go to state 17

    id                             shift and go to state 64

state 37

    (24) id_array -> empty .

    EQ              reduce using rule 24 (id_array -> empty .)
    S               reduce using rule 24 (id_array -> empty .)
    AND             reduce using rule 24 (id_array -> empty .)
    OR              reduce using rule 24 (id_array -> empty .)
    MIN             reduce using rule 24 (id_array -> empty .)
    MAJ             reduce using rule 24 (id_array -> empty .)
    MAJ_EQ          reduce using rule 24 (id_array -> empty .)
    MIN_EQ          reduce using rule 24 (id_array -> empty .)
    PLUS            reduce using rule 24 (id_array -> empty .)
    MINUS           reduce using rule 24 (id_array -> empty .)
    STAR            reduce using rule 24 (id_array -> empty .)
    DIV             reduce using rule 24 (id_array -> empty .)
    UMINUS          reduce using rule 24 (id_array -> empty .)
    MINUS_ID        reduce using rule 24 (id_array -> empty .)
    RC              reduce using rule 24 (id_array -> empty .)
    SC              reduce using rule 24 (id_array -> empty .)


state 38

    (5) decl -> type var_list S .

    IF              reduce using rule 5 (decl -> type var_list S .)
    ELSE            reduce using rule 5 (decl -> type var_list S .)
    WHILE           reduce using rule 5 (decl -> type var_list S .)
    PRINT           reduce using rule 5 (decl -> type var_list S .)
    BO              reduce using rule 5 (decl -> type var_list S .)
    INT_TYPE        reduce using rule 5 (decl -> type var_list S .)
    DOUBLE_TYPE     reduce using rule 5 (decl -> type var_list S .)
    ID              reduce using rule 5 (decl -> type var_list S .)


state 39

    (18) var_list -> var_list CM . var
    (19) var -> . ID array

    ID              shift and go to state 21

    var                            shift and go to state 65

state 40

    (19) var -> ID array .

    S               reduce using rule 19 (var -> ID array .)
    CM              reduce using rule 19 (var -> ID array .)


state 41

    (20) array -> empty .

    S               reduce using rule 20 (array -> empty .)
    CM              reduce using rule 20 (array -> empty .)


state 42

    (21) array -> SO . INT SC array

    INT             shift and go to state 66


state 43

    (8) stmt -> IF RO exp . RC stmt
    (27) exp -> exp . AND exp
    (28) exp -> exp . OR exp
    (30) exp -> exp . EQ EQ exp
    (31) exp -> exp . MIN exp
    (32) exp -> exp . MAJ exp
    (33) exp -> exp . MAJ_EQ exp
    (34) exp -> exp . MIN_EQ exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . STAR exp
    (38) exp -> exp . DIV exp
    (39) exp -> exp . UMINUS
    (40) exp -> exp . MINUS_ID

    RC              shift and go to state 67
    AND             shift and go to state 46
    OR              shift and go to state 47
    EQ              shift and go to state 48
    MIN             shift and go to state 49
    MAJ             shift and go to state 50
    MAJ_EQ          shift and go to state 51
    MIN_EQ          shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    STAR            shift and go to state 55
    DIV             shift and go to state 56
    UMINUS          shift and go to state 57
    MINUS_ID        shift and go to state 58


state 44

    (10) stmt -> WHILE RO exp . RC stmt
    (27) exp -> exp . AND exp
    (28) exp -> exp . OR exp
    (30) exp -> exp . EQ EQ exp
    (31) exp -> exp . MIN exp
    (32) exp -> exp . MAJ exp
    (33) exp -> exp . MAJ_EQ exp
    (34) exp -> exp . MIN_EQ exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . STAR exp
    (38) exp -> exp . DIV exp
    (39) exp -> exp . UMINUS
    (40) exp -> exp . MINUS_ID

    RC              shift and go to state 68
    AND             shift and go to state 46
    OR              shift and go to state 47
    EQ              shift and go to state 48
    MIN             shift and go to state 49
    MAJ             shift and go to state 50
    MAJ_EQ          shift and go to state 51
    MIN_EQ          shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    STAR            shift and go to state 55
    DIV             shift and go to state 56
    UMINUS          shift and go to state 57
    MINUS_ID        shift and go to state 58


state 45

    (12) stmt -> PRINT exp S .

    IF              reduce using rule 12 (stmt -> PRINT exp S .)
    ELSE            reduce using rule 12 (stmt -> PRINT exp S .)
    WHILE           reduce using rule 12 (stmt -> PRINT exp S .)
    PRINT           reduce using rule 12 (stmt -> PRINT exp S .)
    BO              reduce using rule 12 (stmt -> PRINT exp S .)
    ID              reduce using rule 12 (stmt -> PRINT exp S .)
    $end            reduce using rule 12 (stmt -> PRINT exp S .)
    BC              reduce using rule 12 (stmt -> PRINT exp S .)


state 46

    (27) exp -> exp AND . exp
    (27) exp -> . exp AND exp
    (28) exp -> . exp OR exp
    (29) exp -> . NOT exp
    (30) exp -> . exp EQ EQ exp
    (31) exp -> . exp MIN exp
    (32) exp -> . exp MAJ exp
    (33) exp -> . exp MAJ_EQ exp
    (34) exp -> . exp MIN_EQ exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp STAR exp
    (38) exp -> . exp DIV exp
    (39) exp -> . exp UMINUS
    (40) exp -> . exp MINUS_ID
    (41) exp -> . RO exp RC
    (42) exp -> . id
    (43) exp -> . INT
    (44) exp -> . DOUBLE
    (45) exp -> . UMINUS
    (46) exp -> . MINUS_ID
    (25) id -> . ID
    (26) id -> . ID id_array

    NOT             shift and go to state 26
    RO              shift and go to state 29
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    UMINUS          shift and go to state 27
    MINUS_ID        shift and go to state 28
    ID              shift and go to state 17

    exp                            shift and go to state 69
    id                             shift and go to state 30

state 47

    (28) exp -> exp OR . exp
    (27) exp -> . exp AND exp
    (28) exp -> . exp OR exp
    (29) exp -> . NOT exp
    (30) exp -> . exp EQ EQ exp
    (31) exp -> . exp MIN exp
    (32) exp -> . exp MAJ exp
    (33) exp -> . exp MAJ_EQ exp
    (34) exp -> . exp MIN_EQ exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp STAR exp
    (38) exp -> . exp DIV exp
    (39) exp -> . exp UMINUS
    (40) exp -> . exp MINUS_ID
    (41) exp -> . RO exp RC
    (42) exp -> . id
    (43) exp -> . INT
    (44) exp -> . DOUBLE
    (45) exp -> . UMINUS
    (46) exp -> . MINUS_ID
    (25) id -> . ID
    (26) id -> . ID id_array

    NOT             shift and go to state 26
    RO              shift and go to state 29
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    UMINUS          shift and go to state 27
    MINUS_ID        shift and go to state 28
    ID              shift and go to state 17

    exp                            shift and go to state 70
    id                             shift and go to state 30

state 48

    (30) exp -> exp EQ . EQ exp

    EQ              shift and go to state 71


state 49

    (31) exp -> exp MIN . exp
    (27) exp -> . exp AND exp
    (28) exp -> . exp OR exp
    (29) exp -> . NOT exp
    (30) exp -> . exp EQ EQ exp
    (31) exp -> . exp MIN exp
    (32) exp -> . exp MAJ exp
    (33) exp -> . exp MAJ_EQ exp
    (34) exp -> . exp MIN_EQ exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp STAR exp
    (38) exp -> . exp DIV exp
    (39) exp -> . exp UMINUS
    (40) exp -> . exp MINUS_ID
    (41) exp -> . RO exp RC
    (42) exp -> . id
    (43) exp -> . INT
    (44) exp -> . DOUBLE
    (45) exp -> . UMINUS
    (46) exp -> . MINUS_ID
    (25) id -> . ID
    (26) id -> . ID id_array

    NOT             shift and go to state 26
    RO              shift and go to state 29
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    UMINUS          shift and go to state 27
    MINUS_ID        shift and go to state 28
    ID              shift and go to state 17

    exp                            shift and go to state 72
    id                             shift and go to state 30

state 50

    (32) exp -> exp MAJ . exp
    (27) exp -> . exp AND exp
    (28) exp -> . exp OR exp
    (29) exp -> . NOT exp
    (30) exp -> . exp EQ EQ exp
    (31) exp -> . exp MIN exp
    (32) exp -> . exp MAJ exp
    (33) exp -> . exp MAJ_EQ exp
    (34) exp -> . exp MIN_EQ exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp STAR exp
    (38) exp -> . exp DIV exp
    (39) exp -> . exp UMINUS
    (40) exp -> . exp MINUS_ID
    (41) exp -> . RO exp RC
    (42) exp -> . id
    (43) exp -> . INT
    (44) exp -> . DOUBLE
    (45) exp -> . UMINUS
    (46) exp -> . MINUS_ID
    (25) id -> . ID
    (26) id -> . ID id_array

    NOT             shift and go to state 26
    RO              shift and go to state 29
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    UMINUS          shift and go to state 27
    MINUS_ID        shift and go to state 28
    ID              shift and go to state 17

    exp                            shift and go to state 73
    id                             shift and go to state 30

state 51

    (33) exp -> exp MAJ_EQ . exp
    (27) exp -> . exp AND exp
    (28) exp -> . exp OR exp
    (29) exp -> . NOT exp
    (30) exp -> . exp EQ EQ exp
    (31) exp -> . exp MIN exp
    (32) exp -> . exp MAJ exp
    (33) exp -> . exp MAJ_EQ exp
    (34) exp -> . exp MIN_EQ exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp STAR exp
    (38) exp -> . exp DIV exp
    (39) exp -> . exp UMINUS
    (40) exp -> . exp MINUS_ID
    (41) exp -> . RO exp RC
    (42) exp -> . id
    (43) exp -> . INT
    (44) exp -> . DOUBLE
    (45) exp -> . UMINUS
    (46) exp -> . MINUS_ID
    (25) id -> . ID
    (26) id -> . ID id_array

    NOT             shift and go to state 26
    RO              shift and go to state 29
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    UMINUS          shift and go to state 27
    MINUS_ID        shift and go to state 28
    ID              shift and go to state 17

    exp                            shift and go to state 74
    id                             shift and go to state 30

state 52

    (34) exp -> exp MIN_EQ . exp
    (27) exp -> . exp AND exp
    (28) exp -> . exp OR exp
    (29) exp -> . NOT exp
    (30) exp -> . exp EQ EQ exp
    (31) exp -> . exp MIN exp
    (32) exp -> . exp MAJ exp
    (33) exp -> . exp MAJ_EQ exp
    (34) exp -> . exp MIN_EQ exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp STAR exp
    (38) exp -> . exp DIV exp
    (39) exp -> . exp UMINUS
    (40) exp -> . exp MINUS_ID
    (41) exp -> . RO exp RC
    (42) exp -> . id
    (43) exp -> . INT
    (44) exp -> . DOUBLE
    (45) exp -> . UMINUS
    (46) exp -> . MINUS_ID
    (25) id -> . ID
    (26) id -> . ID id_array

    NOT             shift and go to state 26
    RO              shift and go to state 29
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    UMINUS          shift and go to state 27
    MINUS_ID        shift and go to state 28
    ID              shift and go to state 17

    exp                            shift and go to state 75
    id                             shift and go to state 30

state 53

    (35) exp -> exp PLUS . exp
    (27) exp -> . exp AND exp
    (28) exp -> . exp OR exp
    (29) exp -> . NOT exp
    (30) exp -> . exp EQ EQ exp
    (31) exp -> . exp MIN exp
    (32) exp -> . exp MAJ exp
    (33) exp -> . exp MAJ_EQ exp
    (34) exp -> . exp MIN_EQ exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp STAR exp
    (38) exp -> . exp DIV exp
    (39) exp -> . exp UMINUS
    (40) exp -> . exp MINUS_ID
    (41) exp -> . RO exp RC
    (42) exp -> . id
    (43) exp -> . INT
    (44) exp -> . DOUBLE
    (45) exp -> . UMINUS
    (46) exp -> . MINUS_ID
    (25) id -> . ID
    (26) id -> . ID id_array

    NOT             shift and go to state 26
    RO              shift and go to state 29
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    UMINUS          shift and go to state 27
    MINUS_ID        shift and go to state 28
    ID              shift and go to state 17

    exp                            shift and go to state 76
    id                             shift and go to state 30

state 54

    (36) exp -> exp MINUS . exp
    (27) exp -> . exp AND exp
    (28) exp -> . exp OR exp
    (29) exp -> . NOT exp
    (30) exp -> . exp EQ EQ exp
    (31) exp -> . exp MIN exp
    (32) exp -> . exp MAJ exp
    (33) exp -> . exp MAJ_EQ exp
    (34) exp -> . exp MIN_EQ exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp STAR exp
    (38) exp -> . exp DIV exp
    (39) exp -> . exp UMINUS
    (40) exp -> . exp MINUS_ID
    (41) exp -> . RO exp RC
    (42) exp -> . id
    (43) exp -> . INT
    (44) exp -> . DOUBLE
    (45) exp -> . UMINUS
    (46) exp -> . MINUS_ID
    (25) id -> . ID
    (26) id -> . ID id_array

    NOT             shift and go to state 26
    RO              shift and go to state 29
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    UMINUS          shift and go to state 27
    MINUS_ID        shift and go to state 28
    ID              shift and go to state 17

    exp                            shift and go to state 77
    id                             shift and go to state 30

state 55

    (37) exp -> exp STAR . exp
    (27) exp -> . exp AND exp
    (28) exp -> . exp OR exp
    (29) exp -> . NOT exp
    (30) exp -> . exp EQ EQ exp
    (31) exp -> . exp MIN exp
    (32) exp -> . exp MAJ exp
    (33) exp -> . exp MAJ_EQ exp
    (34) exp -> . exp MIN_EQ exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp STAR exp
    (38) exp -> . exp DIV exp
    (39) exp -> . exp UMINUS
    (40) exp -> . exp MINUS_ID
    (41) exp -> . RO exp RC
    (42) exp -> . id
    (43) exp -> . INT
    (44) exp -> . DOUBLE
    (45) exp -> . UMINUS
    (46) exp -> . MINUS_ID
    (25) id -> . ID
    (26) id -> . ID id_array

    NOT             shift and go to state 26
    RO              shift and go to state 29
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    UMINUS          shift and go to state 27
    MINUS_ID        shift and go to state 28
    ID              shift and go to state 17

    exp                            shift and go to state 78
    id                             shift and go to state 30

state 56

    (38) exp -> exp DIV . exp
    (27) exp -> . exp AND exp
    (28) exp -> . exp OR exp
    (29) exp -> . NOT exp
    (30) exp -> . exp EQ EQ exp
    (31) exp -> . exp MIN exp
    (32) exp -> . exp MAJ exp
    (33) exp -> . exp MAJ_EQ exp
    (34) exp -> . exp MIN_EQ exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp STAR exp
    (38) exp -> . exp DIV exp
    (39) exp -> . exp UMINUS
    (40) exp -> . exp MINUS_ID
    (41) exp -> . RO exp RC
    (42) exp -> . id
    (43) exp -> . INT
    (44) exp -> . DOUBLE
    (45) exp -> . UMINUS
    (46) exp -> . MINUS_ID
    (25) id -> . ID
    (26) id -> . ID id_array

    NOT             shift and go to state 26
    RO              shift and go to state 29
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    UMINUS          shift and go to state 27
    MINUS_ID        shift and go to state 28
    ID              shift and go to state 17

    exp                            shift and go to state 79
    id                             shift and go to state 30

state 57

    (39) exp -> exp UMINUS .

    S               reduce using rule 39 (exp -> exp UMINUS .)
    AND             reduce using rule 39 (exp -> exp UMINUS .)
    OR              reduce using rule 39 (exp -> exp UMINUS .)
    EQ              reduce using rule 39 (exp -> exp UMINUS .)
    MIN             reduce using rule 39 (exp -> exp UMINUS .)
    MAJ             reduce using rule 39 (exp -> exp UMINUS .)
    MAJ_EQ          reduce using rule 39 (exp -> exp UMINUS .)
    MIN_EQ          reduce using rule 39 (exp -> exp UMINUS .)
    PLUS            reduce using rule 39 (exp -> exp UMINUS .)
    MINUS           reduce using rule 39 (exp -> exp UMINUS .)
    STAR            reduce using rule 39 (exp -> exp UMINUS .)
    DIV             reduce using rule 39 (exp -> exp UMINUS .)
    UMINUS          reduce using rule 39 (exp -> exp UMINUS .)
    MINUS_ID        reduce using rule 39 (exp -> exp UMINUS .)
    RC              reduce using rule 39 (exp -> exp UMINUS .)


state 58

    (40) exp -> exp MINUS_ID .

    S               reduce using rule 40 (exp -> exp MINUS_ID .)
    AND             reduce using rule 40 (exp -> exp MINUS_ID .)
    OR              reduce using rule 40 (exp -> exp MINUS_ID .)
    EQ              reduce using rule 40 (exp -> exp MINUS_ID .)
    MIN             reduce using rule 40 (exp -> exp MINUS_ID .)
    MAJ             reduce using rule 40 (exp -> exp MINUS_ID .)
    MAJ_EQ          reduce using rule 40 (exp -> exp MINUS_ID .)
    MIN_EQ          reduce using rule 40 (exp -> exp MINUS_ID .)
    PLUS            reduce using rule 40 (exp -> exp MINUS_ID .)
    MINUS           reduce using rule 40 (exp -> exp MINUS_ID .)
    STAR            reduce using rule 40 (exp -> exp MINUS_ID .)
    DIV             reduce using rule 40 (exp -> exp MINUS_ID .)
    UMINUS          reduce using rule 40 (exp -> exp MINUS_ID .)
    MINUS_ID        reduce using rule 40 (exp -> exp MINUS_ID .)
    RC              reduce using rule 40 (exp -> exp MINUS_ID .)


state 59

    (29) exp -> NOT exp .
    (27) exp -> exp . AND exp
    (28) exp -> exp . OR exp
    (30) exp -> exp . EQ EQ exp
    (31) exp -> exp . MIN exp
    (32) exp -> exp . MAJ exp
    (33) exp -> exp . MAJ_EQ exp
    (34) exp -> exp . MIN_EQ exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . STAR exp
    (38) exp -> exp . DIV exp
    (39) exp -> exp . UMINUS
    (40) exp -> exp . MINUS_ID

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for MIN resolved as shift
  ! shift/reduce conflict for MAJ resolved as shift
  ! shift/reduce conflict for MAJ_EQ resolved as shift
  ! shift/reduce conflict for MIN_EQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for UMINUS resolved as shift
  ! shift/reduce conflict for MINUS_ID resolved as shift
    S               reduce using rule 29 (exp -> NOT exp .)
    RC              reduce using rule 29 (exp -> NOT exp .)
    AND             shift and go to state 46
    OR              shift and go to state 47
    EQ              shift and go to state 48
    MIN             shift and go to state 49
    MAJ             shift and go to state 50
    MAJ_EQ          shift and go to state 51
    MIN_EQ          shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    STAR            shift and go to state 55
    DIV             shift and go to state 56
    UMINUS          shift and go to state 57
    MINUS_ID        shift and go to state 58

  ! AND             [ reduce using rule 29 (exp -> NOT exp .) ]
  ! OR              [ reduce using rule 29 (exp -> NOT exp .) ]
  ! EQ              [ reduce using rule 29 (exp -> NOT exp .) ]
  ! MIN             [ reduce using rule 29 (exp -> NOT exp .) ]
  ! MAJ             [ reduce using rule 29 (exp -> NOT exp .) ]
  ! MAJ_EQ          [ reduce using rule 29 (exp -> NOT exp .) ]
  ! MIN_EQ          [ reduce using rule 29 (exp -> NOT exp .) ]
  ! PLUS            [ reduce using rule 29 (exp -> NOT exp .) ]
  ! MINUS           [ reduce using rule 29 (exp -> NOT exp .) ]
  ! STAR            [ reduce using rule 29 (exp -> NOT exp .) ]
  ! DIV             [ reduce using rule 29 (exp -> NOT exp .) ]
  ! UMINUS          [ reduce using rule 29 (exp -> NOT exp .) ]
  ! MINUS_ID        [ reduce using rule 29 (exp -> NOT exp .) ]


state 60

    (41) exp -> RO exp . RC
    (27) exp -> exp . AND exp
    (28) exp -> exp . OR exp
    (30) exp -> exp . EQ EQ exp
    (31) exp -> exp . MIN exp
    (32) exp -> exp . MAJ exp
    (33) exp -> exp . MAJ_EQ exp
    (34) exp -> exp . MIN_EQ exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . STAR exp
    (38) exp -> exp . DIV exp
    (39) exp -> exp . UMINUS
    (40) exp -> exp . MINUS_ID

    RC              shift and go to state 80
    AND             shift and go to state 46
    OR              shift and go to state 47
    EQ              shift and go to state 48
    MIN             shift and go to state 49
    MAJ             shift and go to state 50
    MAJ_EQ          shift and go to state 51
    MIN_EQ          shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    STAR            shift and go to state 55
    DIV             shift and go to state 56
    UMINUS          shift and go to state 57
    MINUS_ID        shift and go to state 58


state 61

    (13) stmt -> BO stmt_list BC .

    IF              reduce using rule 13 (stmt -> BO stmt_list BC .)
    ELSE            reduce using rule 13 (stmt -> BO stmt_list BC .)
    WHILE           reduce using rule 13 (stmt -> BO stmt_list BC .)
    PRINT           reduce using rule 13 (stmt -> BO stmt_list BC .)
    BO              reduce using rule 13 (stmt -> BO stmt_list BC .)
    ID              reduce using rule 13 (stmt -> BO stmt_list BC .)
    $end            reduce using rule 13 (stmt -> BO stmt_list BC .)
    BC              reduce using rule 13 (stmt -> BO stmt_list BC .)


state 62

    (14) assignment -> id EQ exp . S
    (27) exp -> exp . AND exp
    (28) exp -> exp . OR exp
    (30) exp -> exp . EQ EQ exp
    (31) exp -> exp . MIN exp
    (32) exp -> exp . MAJ exp
    (33) exp -> exp . MAJ_EQ exp
    (34) exp -> exp . MIN_EQ exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . STAR exp
    (38) exp -> exp . DIV exp
    (39) exp -> exp . UMINUS
    (40) exp -> exp . MINUS_ID

    S               shift and go to state 81
    AND             shift and go to state 46
    OR              shift and go to state 47
    EQ              shift and go to state 48
    MIN             shift and go to state 49
    MAJ             shift and go to state 50
    MAJ_EQ          shift and go to state 51
    MIN_EQ          shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    STAR            shift and go to state 55
    DIV             shift and go to state 56
    UMINUS          shift and go to state 57
    MINUS_ID        shift and go to state 58


state 63

    (22) id_array -> SO INT . SC id_array

    SC              shift and go to state 82


state 64

    (23) id_array -> SO id . SC id_array

    SC              shift and go to state 83


state 65

    (18) var_list -> var_list CM var .

    S               reduce using rule 18 (var_list -> var_list CM var .)
    CM              reduce using rule 18 (var_list -> var_list CM var .)


state 66

    (21) array -> SO INT . SC array

    SC              shift and go to state 84


state 67

    (8) stmt -> IF RO exp RC . stmt
    (8) stmt -> . IF RO exp RC stmt
    (9) stmt -> . ELSE stmt
    (10) stmt -> . WHILE RO exp RC stmt
    (11) stmt -> . assignment
    (12) stmt -> . PRINT exp S
    (13) stmt -> . BO stmt_list BC
    (14) assignment -> . id EQ exp S
    (25) id -> . ID
    (26) id -> . ID id_array

    IF              shift and go to state 8
    ELSE            shift and go to state 9
    WHILE           shift and go to state 10
    PRINT           shift and go to state 12
    BO              shift and go to state 13
    ID              shift and go to state 17

    stmt                           shift and go to state 85
    assignment                     shift and go to state 11
    id                             shift and go to state 16

state 68

    (10) stmt -> WHILE RO exp RC . stmt
    (8) stmt -> . IF RO exp RC stmt
    (9) stmt -> . ELSE stmt
    (10) stmt -> . WHILE RO exp RC stmt
    (11) stmt -> . assignment
    (12) stmt -> . PRINT exp S
    (13) stmt -> . BO stmt_list BC
    (14) assignment -> . id EQ exp S
    (25) id -> . ID
    (26) id -> . ID id_array

    IF              shift and go to state 8
    ELSE            shift and go to state 9
    WHILE           shift and go to state 10
    PRINT           shift and go to state 12
    BO              shift and go to state 13
    ID              shift and go to state 17

    stmt                           shift and go to state 86
    assignment                     shift and go to state 11
    id                             shift and go to state 16

state 69

    (27) exp -> exp AND exp .
    (27) exp -> exp . AND exp
    (28) exp -> exp . OR exp
    (30) exp -> exp . EQ EQ exp
    (31) exp -> exp . MIN exp
    (32) exp -> exp . MAJ exp
    (33) exp -> exp . MAJ_EQ exp
    (34) exp -> exp . MIN_EQ exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . STAR exp
    (38) exp -> exp . DIV exp
    (39) exp -> exp . UMINUS
    (40) exp -> exp . MINUS_ID

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for MIN resolved as shift
  ! shift/reduce conflict for MAJ resolved as shift
  ! shift/reduce conflict for MAJ_EQ resolved as shift
  ! shift/reduce conflict for MIN_EQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for UMINUS resolved as shift
  ! shift/reduce conflict for MINUS_ID resolved as shift
    S               reduce using rule 27 (exp -> exp AND exp .)
    RC              reduce using rule 27 (exp -> exp AND exp .)
    AND             shift and go to state 46
    OR              shift and go to state 47
    EQ              shift and go to state 48
    MIN             shift and go to state 49
    MAJ             shift and go to state 50
    MAJ_EQ          shift and go to state 51
    MIN_EQ          shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    STAR            shift and go to state 55
    DIV             shift and go to state 56
    UMINUS          shift and go to state 57
    MINUS_ID        shift and go to state 58

  ! AND             [ reduce using rule 27 (exp -> exp AND exp .) ]
  ! OR              [ reduce using rule 27 (exp -> exp AND exp .) ]
  ! EQ              [ reduce using rule 27 (exp -> exp AND exp .) ]
  ! MIN             [ reduce using rule 27 (exp -> exp AND exp .) ]
  ! MAJ             [ reduce using rule 27 (exp -> exp AND exp .) ]
  ! MAJ_EQ          [ reduce using rule 27 (exp -> exp AND exp .) ]
  ! MIN_EQ          [ reduce using rule 27 (exp -> exp AND exp .) ]
  ! PLUS            [ reduce using rule 27 (exp -> exp AND exp .) ]
  ! MINUS           [ reduce using rule 27 (exp -> exp AND exp .) ]
  ! STAR            [ reduce using rule 27 (exp -> exp AND exp .) ]
  ! DIV             [ reduce using rule 27 (exp -> exp AND exp .) ]
  ! UMINUS          [ reduce using rule 27 (exp -> exp AND exp .) ]
  ! MINUS_ID        [ reduce using rule 27 (exp -> exp AND exp .) ]


state 70

    (28) exp -> exp OR exp .
    (27) exp -> exp . AND exp
    (28) exp -> exp . OR exp
    (30) exp -> exp . EQ EQ exp
    (31) exp -> exp . MIN exp
    (32) exp -> exp . MAJ exp
    (33) exp -> exp . MAJ_EQ exp
    (34) exp -> exp . MIN_EQ exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . STAR exp
    (38) exp -> exp . DIV exp
    (39) exp -> exp . UMINUS
    (40) exp -> exp . MINUS_ID

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for MIN resolved as shift
  ! shift/reduce conflict for MAJ resolved as shift
  ! shift/reduce conflict for MAJ_EQ resolved as shift
  ! shift/reduce conflict for MIN_EQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for UMINUS resolved as shift
  ! shift/reduce conflict for MINUS_ID resolved as shift
    S               reduce using rule 28 (exp -> exp OR exp .)
    RC              reduce using rule 28 (exp -> exp OR exp .)
    AND             shift and go to state 46
    OR              shift and go to state 47
    EQ              shift and go to state 48
    MIN             shift and go to state 49
    MAJ             shift and go to state 50
    MAJ_EQ          shift and go to state 51
    MIN_EQ          shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    STAR            shift and go to state 55
    DIV             shift and go to state 56
    UMINUS          shift and go to state 57
    MINUS_ID        shift and go to state 58

  ! AND             [ reduce using rule 28 (exp -> exp OR exp .) ]
  ! OR              [ reduce using rule 28 (exp -> exp OR exp .) ]
  ! EQ              [ reduce using rule 28 (exp -> exp OR exp .) ]
  ! MIN             [ reduce using rule 28 (exp -> exp OR exp .) ]
  ! MAJ             [ reduce using rule 28 (exp -> exp OR exp .) ]
  ! MAJ_EQ          [ reduce using rule 28 (exp -> exp OR exp .) ]
  ! MIN_EQ          [ reduce using rule 28 (exp -> exp OR exp .) ]
  ! PLUS            [ reduce using rule 28 (exp -> exp OR exp .) ]
  ! MINUS           [ reduce using rule 28 (exp -> exp OR exp .) ]
  ! STAR            [ reduce using rule 28 (exp -> exp OR exp .) ]
  ! DIV             [ reduce using rule 28 (exp -> exp OR exp .) ]
  ! UMINUS          [ reduce using rule 28 (exp -> exp OR exp .) ]
  ! MINUS_ID        [ reduce using rule 28 (exp -> exp OR exp .) ]


state 71

    (30) exp -> exp EQ EQ . exp
    (27) exp -> . exp AND exp
    (28) exp -> . exp OR exp
    (29) exp -> . NOT exp
    (30) exp -> . exp EQ EQ exp
    (31) exp -> . exp MIN exp
    (32) exp -> . exp MAJ exp
    (33) exp -> . exp MAJ_EQ exp
    (34) exp -> . exp MIN_EQ exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp STAR exp
    (38) exp -> . exp DIV exp
    (39) exp -> . exp UMINUS
    (40) exp -> . exp MINUS_ID
    (41) exp -> . RO exp RC
    (42) exp -> . id
    (43) exp -> . INT
    (44) exp -> . DOUBLE
    (45) exp -> . UMINUS
    (46) exp -> . MINUS_ID
    (25) id -> . ID
    (26) id -> . ID id_array

    NOT             shift and go to state 26
    RO              shift and go to state 29
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    UMINUS          shift and go to state 27
    MINUS_ID        shift and go to state 28
    ID              shift and go to state 17

    exp                            shift and go to state 87
    id                             shift and go to state 30

state 72

    (31) exp -> exp MIN exp .
    (27) exp -> exp . AND exp
    (28) exp -> exp . OR exp
    (30) exp -> exp . EQ EQ exp
    (31) exp -> exp . MIN exp
    (32) exp -> exp . MAJ exp
    (33) exp -> exp . MAJ_EQ exp
    (34) exp -> exp . MIN_EQ exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . STAR exp
    (38) exp -> exp . DIV exp
    (39) exp -> exp . UMINUS
    (40) exp -> exp . MINUS_ID

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for MIN resolved as shift
  ! shift/reduce conflict for MAJ resolved as shift
  ! shift/reduce conflict for MAJ_EQ resolved as shift
  ! shift/reduce conflict for MIN_EQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for UMINUS resolved as shift
  ! shift/reduce conflict for MINUS_ID resolved as shift
    S               reduce using rule 31 (exp -> exp MIN exp .)
    RC              reduce using rule 31 (exp -> exp MIN exp .)
    AND             shift and go to state 46
    OR              shift and go to state 47
    EQ              shift and go to state 48
    MIN             shift and go to state 49
    MAJ             shift and go to state 50
    MAJ_EQ          shift and go to state 51
    MIN_EQ          shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    STAR            shift and go to state 55
    DIV             shift and go to state 56
    UMINUS          shift and go to state 57
    MINUS_ID        shift and go to state 58

  ! AND             [ reduce using rule 31 (exp -> exp MIN exp .) ]
  ! OR              [ reduce using rule 31 (exp -> exp MIN exp .) ]
  ! EQ              [ reduce using rule 31 (exp -> exp MIN exp .) ]
  ! MIN             [ reduce using rule 31 (exp -> exp MIN exp .) ]
  ! MAJ             [ reduce using rule 31 (exp -> exp MIN exp .) ]
  ! MAJ_EQ          [ reduce using rule 31 (exp -> exp MIN exp .) ]
  ! MIN_EQ          [ reduce using rule 31 (exp -> exp MIN exp .) ]
  ! PLUS            [ reduce using rule 31 (exp -> exp MIN exp .) ]
  ! MINUS           [ reduce using rule 31 (exp -> exp MIN exp .) ]
  ! STAR            [ reduce using rule 31 (exp -> exp MIN exp .) ]
  ! DIV             [ reduce using rule 31 (exp -> exp MIN exp .) ]
  ! UMINUS          [ reduce using rule 31 (exp -> exp MIN exp .) ]
  ! MINUS_ID        [ reduce using rule 31 (exp -> exp MIN exp .) ]


state 73

    (32) exp -> exp MAJ exp .
    (27) exp -> exp . AND exp
    (28) exp -> exp . OR exp
    (30) exp -> exp . EQ EQ exp
    (31) exp -> exp . MIN exp
    (32) exp -> exp . MAJ exp
    (33) exp -> exp . MAJ_EQ exp
    (34) exp -> exp . MIN_EQ exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . STAR exp
    (38) exp -> exp . DIV exp
    (39) exp -> exp . UMINUS
    (40) exp -> exp . MINUS_ID

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for MIN resolved as shift
  ! shift/reduce conflict for MAJ resolved as shift
  ! shift/reduce conflict for MAJ_EQ resolved as shift
  ! shift/reduce conflict for MIN_EQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for UMINUS resolved as shift
  ! shift/reduce conflict for MINUS_ID resolved as shift
    S               reduce using rule 32 (exp -> exp MAJ exp .)
    RC              reduce using rule 32 (exp -> exp MAJ exp .)
    AND             shift and go to state 46
    OR              shift and go to state 47
    EQ              shift and go to state 48
    MIN             shift and go to state 49
    MAJ             shift and go to state 50
    MAJ_EQ          shift and go to state 51
    MIN_EQ          shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    STAR            shift and go to state 55
    DIV             shift and go to state 56
    UMINUS          shift and go to state 57
    MINUS_ID        shift and go to state 58

  ! AND             [ reduce using rule 32 (exp -> exp MAJ exp .) ]
  ! OR              [ reduce using rule 32 (exp -> exp MAJ exp .) ]
  ! EQ              [ reduce using rule 32 (exp -> exp MAJ exp .) ]
  ! MIN             [ reduce using rule 32 (exp -> exp MAJ exp .) ]
  ! MAJ             [ reduce using rule 32 (exp -> exp MAJ exp .) ]
  ! MAJ_EQ          [ reduce using rule 32 (exp -> exp MAJ exp .) ]
  ! MIN_EQ          [ reduce using rule 32 (exp -> exp MAJ exp .) ]
  ! PLUS            [ reduce using rule 32 (exp -> exp MAJ exp .) ]
  ! MINUS           [ reduce using rule 32 (exp -> exp MAJ exp .) ]
  ! STAR            [ reduce using rule 32 (exp -> exp MAJ exp .) ]
  ! DIV             [ reduce using rule 32 (exp -> exp MAJ exp .) ]
  ! UMINUS          [ reduce using rule 32 (exp -> exp MAJ exp .) ]
  ! MINUS_ID        [ reduce using rule 32 (exp -> exp MAJ exp .) ]


state 74

    (33) exp -> exp MAJ_EQ exp .
    (27) exp -> exp . AND exp
    (28) exp -> exp . OR exp
    (30) exp -> exp . EQ EQ exp
    (31) exp -> exp . MIN exp
    (32) exp -> exp . MAJ exp
    (33) exp -> exp . MAJ_EQ exp
    (34) exp -> exp . MIN_EQ exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . STAR exp
    (38) exp -> exp . DIV exp
    (39) exp -> exp . UMINUS
    (40) exp -> exp . MINUS_ID

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for MIN resolved as shift
  ! shift/reduce conflict for MAJ resolved as shift
  ! shift/reduce conflict for MAJ_EQ resolved as shift
  ! shift/reduce conflict for MIN_EQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for UMINUS resolved as shift
  ! shift/reduce conflict for MINUS_ID resolved as shift
    S               reduce using rule 33 (exp -> exp MAJ_EQ exp .)
    RC              reduce using rule 33 (exp -> exp MAJ_EQ exp .)
    AND             shift and go to state 46
    OR              shift and go to state 47
    EQ              shift and go to state 48
    MIN             shift and go to state 49
    MAJ             shift and go to state 50
    MAJ_EQ          shift and go to state 51
    MIN_EQ          shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    STAR            shift and go to state 55
    DIV             shift and go to state 56
    UMINUS          shift and go to state 57
    MINUS_ID        shift and go to state 58

  ! AND             [ reduce using rule 33 (exp -> exp MAJ_EQ exp .) ]
  ! OR              [ reduce using rule 33 (exp -> exp MAJ_EQ exp .) ]
  ! EQ              [ reduce using rule 33 (exp -> exp MAJ_EQ exp .) ]
  ! MIN             [ reduce using rule 33 (exp -> exp MAJ_EQ exp .) ]
  ! MAJ             [ reduce using rule 33 (exp -> exp MAJ_EQ exp .) ]
  ! MAJ_EQ          [ reduce using rule 33 (exp -> exp MAJ_EQ exp .) ]
  ! MIN_EQ          [ reduce using rule 33 (exp -> exp MAJ_EQ exp .) ]
  ! PLUS            [ reduce using rule 33 (exp -> exp MAJ_EQ exp .) ]
  ! MINUS           [ reduce using rule 33 (exp -> exp MAJ_EQ exp .) ]
  ! STAR            [ reduce using rule 33 (exp -> exp MAJ_EQ exp .) ]
  ! DIV             [ reduce using rule 33 (exp -> exp MAJ_EQ exp .) ]
  ! UMINUS          [ reduce using rule 33 (exp -> exp MAJ_EQ exp .) ]
  ! MINUS_ID        [ reduce using rule 33 (exp -> exp MAJ_EQ exp .) ]


state 75

    (34) exp -> exp MIN_EQ exp .
    (27) exp -> exp . AND exp
    (28) exp -> exp . OR exp
    (30) exp -> exp . EQ EQ exp
    (31) exp -> exp . MIN exp
    (32) exp -> exp . MAJ exp
    (33) exp -> exp . MAJ_EQ exp
    (34) exp -> exp . MIN_EQ exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . STAR exp
    (38) exp -> exp . DIV exp
    (39) exp -> exp . UMINUS
    (40) exp -> exp . MINUS_ID

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for MIN resolved as shift
  ! shift/reduce conflict for MAJ resolved as shift
  ! shift/reduce conflict for MAJ_EQ resolved as shift
  ! shift/reduce conflict for MIN_EQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for UMINUS resolved as shift
  ! shift/reduce conflict for MINUS_ID resolved as shift
    S               reduce using rule 34 (exp -> exp MIN_EQ exp .)
    RC              reduce using rule 34 (exp -> exp MIN_EQ exp .)
    AND             shift and go to state 46
    OR              shift and go to state 47
    EQ              shift and go to state 48
    MIN             shift and go to state 49
    MAJ             shift and go to state 50
    MAJ_EQ          shift and go to state 51
    MIN_EQ          shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    STAR            shift and go to state 55
    DIV             shift and go to state 56
    UMINUS          shift and go to state 57
    MINUS_ID        shift and go to state 58

  ! AND             [ reduce using rule 34 (exp -> exp MIN_EQ exp .) ]
  ! OR              [ reduce using rule 34 (exp -> exp MIN_EQ exp .) ]
  ! EQ              [ reduce using rule 34 (exp -> exp MIN_EQ exp .) ]
  ! MIN             [ reduce using rule 34 (exp -> exp MIN_EQ exp .) ]
  ! MAJ             [ reduce using rule 34 (exp -> exp MIN_EQ exp .) ]
  ! MAJ_EQ          [ reduce using rule 34 (exp -> exp MIN_EQ exp .) ]
  ! MIN_EQ          [ reduce using rule 34 (exp -> exp MIN_EQ exp .) ]
  ! PLUS            [ reduce using rule 34 (exp -> exp MIN_EQ exp .) ]
  ! MINUS           [ reduce using rule 34 (exp -> exp MIN_EQ exp .) ]
  ! STAR            [ reduce using rule 34 (exp -> exp MIN_EQ exp .) ]
  ! DIV             [ reduce using rule 34 (exp -> exp MIN_EQ exp .) ]
  ! UMINUS          [ reduce using rule 34 (exp -> exp MIN_EQ exp .) ]
  ! MINUS_ID        [ reduce using rule 34 (exp -> exp MIN_EQ exp .) ]


state 76

    (35) exp -> exp PLUS exp .
    (27) exp -> exp . AND exp
    (28) exp -> exp . OR exp
    (30) exp -> exp . EQ EQ exp
    (31) exp -> exp . MIN exp
    (32) exp -> exp . MAJ exp
    (33) exp -> exp . MAJ_EQ exp
    (34) exp -> exp . MIN_EQ exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . STAR exp
    (38) exp -> exp . DIV exp
    (39) exp -> exp . UMINUS
    (40) exp -> exp . MINUS_ID

    S               reduce using rule 35 (exp -> exp PLUS exp .)
    AND             reduce using rule 35 (exp -> exp PLUS exp .)
    OR              reduce using rule 35 (exp -> exp PLUS exp .)
    EQ              reduce using rule 35 (exp -> exp PLUS exp .)
    MIN             reduce using rule 35 (exp -> exp PLUS exp .)
    MAJ             reduce using rule 35 (exp -> exp PLUS exp .)
    MAJ_EQ          reduce using rule 35 (exp -> exp PLUS exp .)
    MIN_EQ          reduce using rule 35 (exp -> exp PLUS exp .)
    PLUS            reduce using rule 35 (exp -> exp PLUS exp .)
    MINUS           reduce using rule 35 (exp -> exp PLUS exp .)
    MINUS_ID        reduce using rule 35 (exp -> exp PLUS exp .)
    RC              reduce using rule 35 (exp -> exp PLUS exp .)
    STAR            shift and go to state 55
    DIV             shift and go to state 56
    UMINUS          shift and go to state 57

  ! STAR            [ reduce using rule 35 (exp -> exp PLUS exp .) ]
  ! DIV             [ reduce using rule 35 (exp -> exp PLUS exp .) ]
  ! UMINUS          [ reduce using rule 35 (exp -> exp PLUS exp .) ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! MIN             [ shift and go to state 49 ]
  ! MAJ             [ shift and go to state 50 ]
  ! MAJ_EQ          [ shift and go to state 51 ]
  ! MIN_EQ          [ shift and go to state 52 ]
  ! PLUS            [ shift and go to state 53 ]
  ! MINUS           [ shift and go to state 54 ]
  ! MINUS_ID        [ shift and go to state 58 ]


state 77

    (36) exp -> exp MINUS exp .
    (27) exp -> exp . AND exp
    (28) exp -> exp . OR exp
    (30) exp -> exp . EQ EQ exp
    (31) exp -> exp . MIN exp
    (32) exp -> exp . MAJ exp
    (33) exp -> exp . MAJ_EQ exp
    (34) exp -> exp . MIN_EQ exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . STAR exp
    (38) exp -> exp . DIV exp
    (39) exp -> exp . UMINUS
    (40) exp -> exp . MINUS_ID

    S               reduce using rule 36 (exp -> exp MINUS exp .)
    AND             reduce using rule 36 (exp -> exp MINUS exp .)
    OR              reduce using rule 36 (exp -> exp MINUS exp .)
    EQ              reduce using rule 36 (exp -> exp MINUS exp .)
    MIN             reduce using rule 36 (exp -> exp MINUS exp .)
    MAJ             reduce using rule 36 (exp -> exp MINUS exp .)
    MAJ_EQ          reduce using rule 36 (exp -> exp MINUS exp .)
    MIN_EQ          reduce using rule 36 (exp -> exp MINUS exp .)
    PLUS            reduce using rule 36 (exp -> exp MINUS exp .)
    MINUS           reduce using rule 36 (exp -> exp MINUS exp .)
    MINUS_ID        reduce using rule 36 (exp -> exp MINUS exp .)
    RC              reduce using rule 36 (exp -> exp MINUS exp .)
    STAR            shift and go to state 55
    DIV             shift and go to state 56
    UMINUS          shift and go to state 57

  ! STAR            [ reduce using rule 36 (exp -> exp MINUS exp .) ]
  ! DIV             [ reduce using rule 36 (exp -> exp MINUS exp .) ]
  ! UMINUS          [ reduce using rule 36 (exp -> exp MINUS exp .) ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! MIN             [ shift and go to state 49 ]
  ! MAJ             [ shift and go to state 50 ]
  ! MAJ_EQ          [ shift and go to state 51 ]
  ! MIN_EQ          [ shift and go to state 52 ]
  ! PLUS            [ shift and go to state 53 ]
  ! MINUS           [ shift and go to state 54 ]
  ! MINUS_ID        [ shift and go to state 58 ]


state 78

    (37) exp -> exp STAR exp .
    (27) exp -> exp . AND exp
    (28) exp -> exp . OR exp
    (30) exp -> exp . EQ EQ exp
    (31) exp -> exp . MIN exp
    (32) exp -> exp . MAJ exp
    (33) exp -> exp . MAJ_EQ exp
    (34) exp -> exp . MIN_EQ exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . STAR exp
    (38) exp -> exp . DIV exp
    (39) exp -> exp . UMINUS
    (40) exp -> exp . MINUS_ID

    S               reduce using rule 37 (exp -> exp STAR exp .)
    AND             reduce using rule 37 (exp -> exp STAR exp .)
    OR              reduce using rule 37 (exp -> exp STAR exp .)
    EQ              reduce using rule 37 (exp -> exp STAR exp .)
    MIN             reduce using rule 37 (exp -> exp STAR exp .)
    MAJ             reduce using rule 37 (exp -> exp STAR exp .)
    MAJ_EQ          reduce using rule 37 (exp -> exp STAR exp .)
    MIN_EQ          reduce using rule 37 (exp -> exp STAR exp .)
    PLUS            reduce using rule 37 (exp -> exp STAR exp .)
    MINUS           reduce using rule 37 (exp -> exp STAR exp .)
    STAR            reduce using rule 37 (exp -> exp STAR exp .)
    DIV             reduce using rule 37 (exp -> exp STAR exp .)
    MINUS_ID        reduce using rule 37 (exp -> exp STAR exp .)
    RC              reduce using rule 37 (exp -> exp STAR exp .)
    UMINUS          shift and go to state 57

  ! UMINUS          [ reduce using rule 37 (exp -> exp STAR exp .) ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! MIN             [ shift and go to state 49 ]
  ! MAJ             [ shift and go to state 50 ]
  ! MAJ_EQ          [ shift and go to state 51 ]
  ! MIN_EQ          [ shift and go to state 52 ]
  ! PLUS            [ shift and go to state 53 ]
  ! MINUS           [ shift and go to state 54 ]
  ! STAR            [ shift and go to state 55 ]
  ! DIV             [ shift and go to state 56 ]
  ! MINUS_ID        [ shift and go to state 58 ]


state 79

    (38) exp -> exp DIV exp .
    (27) exp -> exp . AND exp
    (28) exp -> exp . OR exp
    (30) exp -> exp . EQ EQ exp
    (31) exp -> exp . MIN exp
    (32) exp -> exp . MAJ exp
    (33) exp -> exp . MAJ_EQ exp
    (34) exp -> exp . MIN_EQ exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . STAR exp
    (38) exp -> exp . DIV exp
    (39) exp -> exp . UMINUS
    (40) exp -> exp . MINUS_ID

    S               reduce using rule 38 (exp -> exp DIV exp .)
    AND             reduce using rule 38 (exp -> exp DIV exp .)
    OR              reduce using rule 38 (exp -> exp DIV exp .)
    EQ              reduce using rule 38 (exp -> exp DIV exp .)
    MIN             reduce using rule 38 (exp -> exp DIV exp .)
    MAJ             reduce using rule 38 (exp -> exp DIV exp .)
    MAJ_EQ          reduce using rule 38 (exp -> exp DIV exp .)
    MIN_EQ          reduce using rule 38 (exp -> exp DIV exp .)
    PLUS            reduce using rule 38 (exp -> exp DIV exp .)
    MINUS           reduce using rule 38 (exp -> exp DIV exp .)
    STAR            reduce using rule 38 (exp -> exp DIV exp .)
    DIV             reduce using rule 38 (exp -> exp DIV exp .)
    MINUS_ID        reduce using rule 38 (exp -> exp DIV exp .)
    RC              reduce using rule 38 (exp -> exp DIV exp .)
    UMINUS          shift and go to state 57

  ! UMINUS          [ reduce using rule 38 (exp -> exp DIV exp .) ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! MIN             [ shift and go to state 49 ]
  ! MAJ             [ shift and go to state 50 ]
  ! MAJ_EQ          [ shift and go to state 51 ]
  ! MIN_EQ          [ shift and go to state 52 ]
  ! PLUS            [ shift and go to state 53 ]
  ! MINUS           [ shift and go to state 54 ]
  ! STAR            [ shift and go to state 55 ]
  ! DIV             [ shift and go to state 56 ]
  ! MINUS_ID        [ shift and go to state 58 ]


state 80

    (41) exp -> RO exp RC .

    S               reduce using rule 41 (exp -> RO exp RC .)
    AND             reduce using rule 41 (exp -> RO exp RC .)
    OR              reduce using rule 41 (exp -> RO exp RC .)
    EQ              reduce using rule 41 (exp -> RO exp RC .)
    MIN             reduce using rule 41 (exp -> RO exp RC .)
    MAJ             reduce using rule 41 (exp -> RO exp RC .)
    MAJ_EQ          reduce using rule 41 (exp -> RO exp RC .)
    MIN_EQ          reduce using rule 41 (exp -> RO exp RC .)
    PLUS            reduce using rule 41 (exp -> RO exp RC .)
    MINUS           reduce using rule 41 (exp -> RO exp RC .)
    STAR            reduce using rule 41 (exp -> RO exp RC .)
    DIV             reduce using rule 41 (exp -> RO exp RC .)
    UMINUS          reduce using rule 41 (exp -> RO exp RC .)
    MINUS_ID        reduce using rule 41 (exp -> RO exp RC .)
    RC              reduce using rule 41 (exp -> RO exp RC .)


state 81

    (14) assignment -> id EQ exp S .

    IF              reduce using rule 14 (assignment -> id EQ exp S .)
    ELSE            reduce using rule 14 (assignment -> id EQ exp S .)
    WHILE           reduce using rule 14 (assignment -> id EQ exp S .)
    PRINT           reduce using rule 14 (assignment -> id EQ exp S .)
    BO              reduce using rule 14 (assignment -> id EQ exp S .)
    ID              reduce using rule 14 (assignment -> id EQ exp S .)
    $end            reduce using rule 14 (assignment -> id EQ exp S .)
    BC              reduce using rule 14 (assignment -> id EQ exp S .)


state 82

    (22) id_array -> SO INT SC . id_array
    (22) id_array -> . SO INT SC id_array
    (23) id_array -> . SO id SC id_array
    (24) id_array -> . empty
    (4) empty -> .

    SO              shift and go to state 36
    EQ              reduce using rule 4 (empty -> .)
    S               reduce using rule 4 (empty -> .)
    AND             reduce using rule 4 (empty -> .)
    OR              reduce using rule 4 (empty -> .)
    MIN             reduce using rule 4 (empty -> .)
    MAJ             reduce using rule 4 (empty -> .)
    MAJ_EQ          reduce using rule 4 (empty -> .)
    MIN_EQ          reduce using rule 4 (empty -> .)
    PLUS            reduce using rule 4 (empty -> .)
    MINUS           reduce using rule 4 (empty -> .)
    STAR            reduce using rule 4 (empty -> .)
    DIV             reduce using rule 4 (empty -> .)
    UMINUS          reduce using rule 4 (empty -> .)
    MINUS_ID        reduce using rule 4 (empty -> .)
    RC              reduce using rule 4 (empty -> .)
    SC              reduce using rule 4 (empty -> .)

    id_array                       shift and go to state 88
    empty                          shift and go to state 37

state 83

    (23) id_array -> SO id SC . id_array
    (22) id_array -> . SO INT SC id_array
    (23) id_array -> . SO id SC id_array
    (24) id_array -> . empty
    (4) empty -> .

    SO              shift and go to state 36
    EQ              reduce using rule 4 (empty -> .)
    S               reduce using rule 4 (empty -> .)
    AND             reduce using rule 4 (empty -> .)
    OR              reduce using rule 4 (empty -> .)
    MIN             reduce using rule 4 (empty -> .)
    MAJ             reduce using rule 4 (empty -> .)
    MAJ_EQ          reduce using rule 4 (empty -> .)
    MIN_EQ          reduce using rule 4 (empty -> .)
    PLUS            reduce using rule 4 (empty -> .)
    MINUS           reduce using rule 4 (empty -> .)
    STAR            reduce using rule 4 (empty -> .)
    DIV             reduce using rule 4 (empty -> .)
    UMINUS          reduce using rule 4 (empty -> .)
    MINUS_ID        reduce using rule 4 (empty -> .)
    RC              reduce using rule 4 (empty -> .)
    SC              reduce using rule 4 (empty -> .)

    id_array                       shift and go to state 89
    empty                          shift and go to state 37

state 84

    (21) array -> SO INT SC . array
    (20) array -> . empty
    (21) array -> . SO INT SC array
    (4) empty -> .

    SO              shift and go to state 42
    S               reduce using rule 4 (empty -> .)
    CM              reduce using rule 4 (empty -> .)

    array                          shift and go to state 90
    empty                          shift and go to state 41

state 85

    (8) stmt -> IF RO exp RC stmt .

    IF              reduce using rule 8 (stmt -> IF RO exp RC stmt .)
    ELSE            reduce using rule 8 (stmt -> IF RO exp RC stmt .)
    WHILE           reduce using rule 8 (stmt -> IF RO exp RC stmt .)
    PRINT           reduce using rule 8 (stmt -> IF RO exp RC stmt .)
    BO              reduce using rule 8 (stmt -> IF RO exp RC stmt .)
    ID              reduce using rule 8 (stmt -> IF RO exp RC stmt .)
    $end            reduce using rule 8 (stmt -> IF RO exp RC stmt .)
    BC              reduce using rule 8 (stmt -> IF RO exp RC stmt .)


state 86

    (10) stmt -> WHILE RO exp RC stmt .

    IF              reduce using rule 10 (stmt -> WHILE RO exp RC stmt .)
    ELSE            reduce using rule 10 (stmt -> WHILE RO exp RC stmt .)
    WHILE           reduce using rule 10 (stmt -> WHILE RO exp RC stmt .)
    PRINT           reduce using rule 10 (stmt -> WHILE RO exp RC stmt .)
    BO              reduce using rule 10 (stmt -> WHILE RO exp RC stmt .)
    ID              reduce using rule 10 (stmt -> WHILE RO exp RC stmt .)
    $end            reduce using rule 10 (stmt -> WHILE RO exp RC stmt .)
    BC              reduce using rule 10 (stmt -> WHILE RO exp RC stmt .)


state 87

    (30) exp -> exp EQ EQ exp .
    (27) exp -> exp . AND exp
    (28) exp -> exp . OR exp
    (30) exp -> exp . EQ EQ exp
    (31) exp -> exp . MIN exp
    (32) exp -> exp . MAJ exp
    (33) exp -> exp . MAJ_EQ exp
    (34) exp -> exp . MIN_EQ exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . STAR exp
    (38) exp -> exp . DIV exp
    (39) exp -> exp . UMINUS
    (40) exp -> exp . MINUS_ID

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for MIN resolved as shift
  ! shift/reduce conflict for MAJ resolved as shift
  ! shift/reduce conflict for MAJ_EQ resolved as shift
  ! shift/reduce conflict for MIN_EQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for UMINUS resolved as shift
  ! shift/reduce conflict for MINUS_ID resolved as shift
    S               reduce using rule 30 (exp -> exp EQ EQ exp .)
    RC              reduce using rule 30 (exp -> exp EQ EQ exp .)
    AND             shift and go to state 46
    OR              shift and go to state 47
    EQ              shift and go to state 48
    MIN             shift and go to state 49
    MAJ             shift and go to state 50
    MAJ_EQ          shift and go to state 51
    MIN_EQ          shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    STAR            shift and go to state 55
    DIV             shift and go to state 56
    UMINUS          shift and go to state 57
    MINUS_ID        shift and go to state 58

  ! AND             [ reduce using rule 30 (exp -> exp EQ EQ exp .) ]
  ! OR              [ reduce using rule 30 (exp -> exp EQ EQ exp .) ]
  ! EQ              [ reduce using rule 30 (exp -> exp EQ EQ exp .) ]
  ! MIN             [ reduce using rule 30 (exp -> exp EQ EQ exp .) ]
  ! MAJ             [ reduce using rule 30 (exp -> exp EQ EQ exp .) ]
  ! MAJ_EQ          [ reduce using rule 30 (exp -> exp EQ EQ exp .) ]
  ! MIN_EQ          [ reduce using rule 30 (exp -> exp EQ EQ exp .) ]
  ! PLUS            [ reduce using rule 30 (exp -> exp EQ EQ exp .) ]
  ! MINUS           [ reduce using rule 30 (exp -> exp EQ EQ exp .) ]
  ! STAR            [ reduce using rule 30 (exp -> exp EQ EQ exp .) ]
  ! DIV             [ reduce using rule 30 (exp -> exp EQ EQ exp .) ]
  ! UMINUS          [ reduce using rule 30 (exp -> exp EQ EQ exp .) ]
  ! MINUS_ID        [ reduce using rule 30 (exp -> exp EQ EQ exp .) ]


state 88

    (22) id_array -> SO INT SC id_array .

    EQ              reduce using rule 22 (id_array -> SO INT SC id_array .)
    S               reduce using rule 22 (id_array -> SO INT SC id_array .)
    AND             reduce using rule 22 (id_array -> SO INT SC id_array .)
    OR              reduce using rule 22 (id_array -> SO INT SC id_array .)
    MIN             reduce using rule 22 (id_array -> SO INT SC id_array .)
    MAJ             reduce using rule 22 (id_array -> SO INT SC id_array .)
    MAJ_EQ          reduce using rule 22 (id_array -> SO INT SC id_array .)
    MIN_EQ          reduce using rule 22 (id_array -> SO INT SC id_array .)
    PLUS            reduce using rule 22 (id_array -> SO INT SC id_array .)
    MINUS           reduce using rule 22 (id_array -> SO INT SC id_array .)
    STAR            reduce using rule 22 (id_array -> SO INT SC id_array .)
    DIV             reduce using rule 22 (id_array -> SO INT SC id_array .)
    UMINUS          reduce using rule 22 (id_array -> SO INT SC id_array .)
    MINUS_ID        reduce using rule 22 (id_array -> SO INT SC id_array .)
    RC              reduce using rule 22 (id_array -> SO INT SC id_array .)
    SC              reduce using rule 22 (id_array -> SO INT SC id_array .)


state 89

    (23) id_array -> SO id SC id_array .

    EQ              reduce using rule 23 (id_array -> SO id SC id_array .)
    S               reduce using rule 23 (id_array -> SO id SC id_array .)
    AND             reduce using rule 23 (id_array -> SO id SC id_array .)
    OR              reduce using rule 23 (id_array -> SO id SC id_array .)
    MIN             reduce using rule 23 (id_array -> SO id SC id_array .)
    MAJ             reduce using rule 23 (id_array -> SO id SC id_array .)
    MAJ_EQ          reduce using rule 23 (id_array -> SO id SC id_array .)
    MIN_EQ          reduce using rule 23 (id_array -> SO id SC id_array .)
    PLUS            reduce using rule 23 (id_array -> SO id SC id_array .)
    MINUS           reduce using rule 23 (id_array -> SO id SC id_array .)
    STAR            reduce using rule 23 (id_array -> SO id SC id_array .)
    DIV             reduce using rule 23 (id_array -> SO id SC id_array .)
    UMINUS          reduce using rule 23 (id_array -> SO id SC id_array .)
    MINUS_ID        reduce using rule 23 (id_array -> SO id SC id_array .)
    RC              reduce using rule 23 (id_array -> SO id SC id_array .)
    SC              reduce using rule 23 (id_array -> SO id SC id_array .)


state 90

    (21) array -> SO INT SC array .

    S               reduce using rule 21 (array -> SO INT SC array .)
    CM              reduce using rule 21 (array -> SO INT SC array .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 59 resolved as shift
WARNING: shift/reduce conflict for OR in state 59 resolved as shift
WARNING: shift/reduce conflict for EQ in state 59 resolved as shift
WARNING: shift/reduce conflict for MIN in state 59 resolved as shift
WARNING: shift/reduce conflict for MAJ in state 59 resolved as shift
WARNING: shift/reduce conflict for MAJ_EQ in state 59 resolved as shift
WARNING: shift/reduce conflict for MIN_EQ in state 59 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 59 resolved as shift
WARNING: shift/reduce conflict for STAR in state 59 resolved as shift
WARNING: shift/reduce conflict for DIV in state 59 resolved as shift
WARNING: shift/reduce conflict for UMINUS in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS_ID in state 59 resolved as shift
WARNING: shift/reduce conflict for AND in state 69 resolved as shift
WARNING: shift/reduce conflict for OR in state 69 resolved as shift
WARNING: shift/reduce conflict for EQ in state 69 resolved as shift
WARNING: shift/reduce conflict for MIN in state 69 resolved as shift
WARNING: shift/reduce conflict for MAJ in state 69 resolved as shift
WARNING: shift/reduce conflict for MAJ_EQ in state 69 resolved as shift
WARNING: shift/reduce conflict for MIN_EQ in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for STAR in state 69 resolved as shift
WARNING: shift/reduce conflict for DIV in state 69 resolved as shift
WARNING: shift/reduce conflict for UMINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS_ID in state 69 resolved as shift
WARNING: shift/reduce conflict for AND in state 70 resolved as shift
WARNING: shift/reduce conflict for OR in state 70 resolved as shift
WARNING: shift/reduce conflict for EQ in state 70 resolved as shift
WARNING: shift/reduce conflict for MIN in state 70 resolved as shift
WARNING: shift/reduce conflict for MAJ in state 70 resolved as shift
WARNING: shift/reduce conflict for MAJ_EQ in state 70 resolved as shift
WARNING: shift/reduce conflict for MIN_EQ in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for STAR in state 70 resolved as shift
WARNING: shift/reduce conflict for DIV in state 70 resolved as shift
WARNING: shift/reduce conflict for UMINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS_ID in state 70 resolved as shift
WARNING: shift/reduce conflict for AND in state 72 resolved as shift
WARNING: shift/reduce conflict for OR in state 72 resolved as shift
WARNING: shift/reduce conflict for EQ in state 72 resolved as shift
WARNING: shift/reduce conflict for MIN in state 72 resolved as shift
WARNING: shift/reduce conflict for MAJ in state 72 resolved as shift
WARNING: shift/reduce conflict for MAJ_EQ in state 72 resolved as shift
WARNING: shift/reduce conflict for MIN_EQ in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for STAR in state 72 resolved as shift
WARNING: shift/reduce conflict for DIV in state 72 resolved as shift
WARNING: shift/reduce conflict for UMINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS_ID in state 72 resolved as shift
WARNING: shift/reduce conflict for AND in state 73 resolved as shift
WARNING: shift/reduce conflict for OR in state 73 resolved as shift
WARNING: shift/reduce conflict for EQ in state 73 resolved as shift
WARNING: shift/reduce conflict for MIN in state 73 resolved as shift
WARNING: shift/reduce conflict for MAJ in state 73 resolved as shift
WARNING: shift/reduce conflict for MAJ_EQ in state 73 resolved as shift
WARNING: shift/reduce conflict for MIN_EQ in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for STAR in state 73 resolved as shift
WARNING: shift/reduce conflict for DIV in state 73 resolved as shift
WARNING: shift/reduce conflict for UMINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS_ID in state 73 resolved as shift
WARNING: shift/reduce conflict for AND in state 74 resolved as shift
WARNING: shift/reduce conflict for OR in state 74 resolved as shift
WARNING: shift/reduce conflict for EQ in state 74 resolved as shift
WARNING: shift/reduce conflict for MIN in state 74 resolved as shift
WARNING: shift/reduce conflict for MAJ in state 74 resolved as shift
WARNING: shift/reduce conflict for MAJ_EQ in state 74 resolved as shift
WARNING: shift/reduce conflict for MIN_EQ in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for STAR in state 74 resolved as shift
WARNING: shift/reduce conflict for DIV in state 74 resolved as shift
WARNING: shift/reduce conflict for UMINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS_ID in state 74 resolved as shift
WARNING: shift/reduce conflict for AND in state 75 resolved as shift
WARNING: shift/reduce conflict for OR in state 75 resolved as shift
WARNING: shift/reduce conflict for EQ in state 75 resolved as shift
WARNING: shift/reduce conflict for MIN in state 75 resolved as shift
WARNING: shift/reduce conflict for MAJ in state 75 resolved as shift
WARNING: shift/reduce conflict for MAJ_EQ in state 75 resolved as shift
WARNING: shift/reduce conflict for MIN_EQ in state 75 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for STAR in state 75 resolved as shift
WARNING: shift/reduce conflict for DIV in state 75 resolved as shift
WARNING: shift/reduce conflict for UMINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS_ID in state 75 resolved as shift
WARNING: shift/reduce conflict for AND in state 87 resolved as shift
WARNING: shift/reduce conflict for OR in state 87 resolved as shift
WARNING: shift/reduce conflict for EQ in state 87 resolved as shift
WARNING: shift/reduce conflict for MIN in state 87 resolved as shift
WARNING: shift/reduce conflict for MAJ in state 87 resolved as shift
WARNING: shift/reduce conflict for MAJ_EQ in state 87 resolved as shift
WARNING: shift/reduce conflict for MIN_EQ in state 87 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for STAR in state 87 resolved as shift
WARNING: shift/reduce conflict for DIV in state 87 resolved as shift
WARNING: shift/reduce conflict for UMINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS_ID in state 87 resolved as shift
WARNING: reduce/reduce conflict in state 17 resolved using rule (empty -> <empty>)
WARNING: rejected rule (id -> ID) in state 17
WARNING: Rule (id -> ID) is never reduced
