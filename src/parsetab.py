
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftSTARDIVrightUMINUSAND BC BO CM COMMENT DIV DOUBLE DOUBLE_TYPE ELSE EQ ID IF INT INT_TYPE MAJ MAJ_EQ MIN MINUS MINUS_ID MIN_EQ NEWLINE NOT OR PLUS PRINT RC RO S SC SO STAR UMINUS WHILE WHITESPACEprog : decl_list stmt_listdecl_list : empty\n        | decl_list decl\n    empty :decl : type var_list Sstmt_list : stmt_list stmt\n        | stmt\n    stmt : IF RO exp RC stmt\n        | ELSE stmt\n        | WHILE RO exp RC stmt\n        | assignment\n        | PRINT exp S\n        | BO stmt_list BC\n    assignment : id EQ exp Stype : INT_TYPE\n        | DOUBLE_TYPE\n    var_list : var\n        | var_list CM var\n    var : ID arrayarray : empty\n        | SO INT SC array\n    id_array : SO INT SC id_array\n        | SO id SC id_array\n        | empty\n    id : ID\n        | ID id_array\n    exp : exp AND exp\n        | exp OR exp\n        | NOT exp\n        | exp EQ EQ exp\n        | exp MIN exp\n        | exp MAJ exp\n        | exp MAJ_EQ exp\n        | exp MIN_EQ exp\n        | exp PLUS exp\n        | exp MINUS exp\n        | exp STAR exp\n        | exp DIV exp\n        | exp UMINUS\n        | exp MINUS_ID\n        | RO exp RC\n        | id\n        | INT\n        | DOUBLE\n        | UMINUS\n        | MINUS_ID\n    '
    
_lr_action_items = {'IF':([0,2,3,4,5,6,9,11,13,18,23,33,38,45,61,67,68,81,85,86,],[-4,8,-2,8,-3,-7,8,-11,8,-6,-9,8,-5,-12,-13,8,8,-14,-8,-10,]),'ELSE':([0,2,3,4,5,6,9,11,13,18,23,33,38,45,61,67,68,81,85,86,],[-4,9,-2,9,-3,-7,9,-11,9,-6,-9,9,-5,-12,-13,9,9,-14,-8,-10,]),'WHILE':([0,2,3,4,5,6,9,11,13,18,23,33,38,45,61,67,68,81,85,86,],[-4,10,-2,10,-3,-7,10,-11,10,-6,-9,10,-5,-12,-13,10,10,-14,-8,-10,]),'PRINT':([0,2,3,4,5,6,9,11,13,18,23,33,38,45,61,67,68,81,85,86,],[-4,12,-2,12,-3,-7,12,-11,12,-6,-9,12,-5,-12,-13,12,12,-14,-8,-10,]),'BO':([0,2,3,4,5,6,9,11,13,18,23,33,38,45,61,67,68,81,85,86,],[-4,13,-2,13,-3,-7,13,-11,13,-6,-9,13,-5,-12,-13,13,13,-14,-8,-10,]),'INT_TYPE':([0,2,3,5,38,],[-4,14,-2,-3,-5,]),'DOUBLE_TYPE':([0,2,3,5,38,],[-4,15,-2,-3,-5,]),'ID':([0,2,3,4,5,6,7,9,11,12,13,14,15,18,22,23,24,26,29,33,34,36,38,39,45,46,47,49,50,51,52,53,54,55,56,61,67,68,71,81,85,86,],[-4,17,-2,17,-3,-7,21,17,-11,17,17,-15,-16,-6,17,-9,17,17,17,17,17,17,-5,21,-12,17,17,17,17,17,17,17,17,17,17,-13,17,17,17,-14,-8,-10,]),'$end':([1,4,6,11,18,23,45,61,81,85,86,],[0,-1,-7,-11,-6,-9,-12,-13,-14,-8,-10,]),'BC':([6,11,18,23,33,45,61,81,85,86,],[-7,-11,-6,-9,61,-12,-13,-14,-8,-10,]),'RO':([8,10,12,22,24,26,29,34,46,47,49,50,51,52,53,54,55,56,71,],[22,24,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'NOT':([12,22,24,26,29,34,46,47,49,50,51,52,53,54,55,56,71,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'INT':([12,22,24,26,29,34,36,42,46,47,49,50,51,52,53,54,55,56,71,],[31,31,31,31,31,31,63,66,31,31,31,31,31,31,31,31,31,31,31,]),'DOUBLE':([12,22,24,26,29,34,46,47,49,50,51,52,53,54,55,56,71,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'UMINUS':([12,17,22,24,25,26,27,28,29,30,31,32,34,35,37,43,44,46,47,49,50,51,52,53,54,55,56,57,58,59,60,62,69,70,71,72,73,74,75,76,77,78,79,80,82,83,87,88,89,],[27,-4,27,27,57,27,-45,-46,27,-42,-43,-44,27,-26,-24,57,57,27,27,27,27,27,27,27,27,27,27,-39,-40,57,57,57,57,57,27,57,57,57,57,57,57,57,57,-41,-4,-4,57,-22,-23,]),'MINUS_ID':([12,17,22,24,25,26,27,28,29,30,31,32,34,35,37,43,44,46,47,49,50,51,52,53,54,55,56,57,58,59,60,62,69,70,71,72,73,74,75,76,77,78,79,80,82,83,87,88,89,],[28,-4,28,28,58,28,-45,-46,28,-42,-43,-44,28,-26,-24,58,58,28,28,28,28,28,28,28,28,28,28,-39,-40,58,58,58,58,58,28,58,58,58,58,-35,-36,-37,-38,-41,-4,-4,58,-22,-23,]),'EQ':([16,17,25,27,28,30,31,32,35,37,43,44,48,57,58,59,60,62,69,70,72,73,74,75,76,77,78,79,80,82,83,87,88,89,],[34,-4,48,-45,-46,-42,-43,-44,-26,-24,48,48,71,-39,-40,48,48,48,48,48,48,48,48,48,-35,-36,-37,-38,-41,-4,-4,48,-22,-23,]),'S':([17,19,20,21,25,27,28,30,31,32,35,37,40,41,57,58,59,62,65,69,70,72,73,74,75,76,77,78,79,80,82,83,84,87,88,89,90,],[-4,38,-17,-4,45,-45,-46,-42,-43,-44,-26,-24,-19,-20,-39,-40,-29,81,-18,-27,-28,-31,-32,-33,-34,-35,-36,-37,-38,-41,-4,-4,-4,-30,-22,-23,-21,]),'AND':([17,25,27,28,30,31,32,35,37,43,44,57,58,59,60,62,69,70,72,73,74,75,76,77,78,79,80,82,83,87,88,89,],[-4,46,-45,-46,-42,-43,-44,-26,-24,46,46,-39,-40,46,46,46,46,46,46,46,46,46,-35,-36,-37,-38,-41,-4,-4,46,-22,-23,]),'OR':([17,25,27,28,30,31,32,35,37,43,44,57,58,59,60,62,69,70,72,73,74,75,76,77,78,79,80,82,83,87,88,89,],[-4,47,-45,-46,-42,-43,-44,-26,-24,47,47,-39,-40,47,47,47,47,47,47,47,47,47,-35,-36,-37,-38,-41,-4,-4,47,-22,-23,]),'MIN':([17,25,27,28,30,31,32,35,37,43,44,57,58,59,60,62,69,70,72,73,74,75,76,77,78,79,80,82,83,87,88,89,],[-4,49,-45,-46,-42,-43,-44,-26,-24,49,49,-39,-40,49,49,49,49,49,49,49,49,49,-35,-36,-37,-38,-41,-4,-4,49,-22,-23,]),'MAJ':([17,25,27,28,30,31,32,35,37,43,44,57,58,59,60,62,69,70,72,73,74,75,76,77,78,79,80,82,83,87,88,89,],[-4,50,-45,-46,-42,-43,-44,-26,-24,50,50,-39,-40,50,50,50,50,50,50,50,50,50,-35,-36,-37,-38,-41,-4,-4,50,-22,-23,]),'MAJ_EQ':([17,25,27,28,30,31,32,35,37,43,44,57,58,59,60,62,69,70,72,73,74,75,76,77,78,79,80,82,83,87,88,89,],[-4,51,-45,-46,-42,-43,-44,-26,-24,51,51,-39,-40,51,51,51,51,51,51,51,51,51,-35,-36,-37,-38,-41,-4,-4,51,-22,-23,]),'MIN_EQ':([17,25,27,28,30,31,32,35,37,43,44,57,58,59,60,62,69,70,72,73,74,75,76,77,78,79,80,82,83,87,88,89,],[-4,52,-45,-46,-42,-43,-44,-26,-24,52,52,-39,-40,52,52,52,52,52,52,52,52,52,-35,-36,-37,-38,-41,-4,-4,52,-22,-23,]),'PLUS':([17,25,27,28,30,31,32,35,37,43,44,57,58,59,60,62,69,70,72,73,74,75,76,77,78,79,80,82,83,87,88,89,],[-4,53,-45,-46,-42,-43,-44,-26,-24,53,53,-39,-40,53,53,53,53,53,53,53,53,53,-35,-36,-37,-38,-41,-4,-4,53,-22,-23,]),'MINUS':([17,25,27,28,30,31,32,35,37,43,44,57,58,59,60,62,69,70,72,73,74,75,76,77,78,79,80,82,83,87,88,89,],[-4,54,-45,-46,-42,-43,-44,-26,-24,54,54,-39,-40,54,54,54,54,54,54,54,54,54,-35,-36,-37,-38,-41,-4,-4,54,-22,-23,]),'STAR':([17,25,27,28,30,31,32,35,37,43,44,57,58,59,60,62,69,70,72,73,74,75,76,77,78,79,80,82,83,87,88,89,],[-4,55,-45,-46,-42,-43,-44,-26,-24,55,55,-39,-40,55,55,55,55,55,55,55,55,55,55,55,-37,-38,-41,-4,-4,55,-22,-23,]),'DIV':([17,25,27,28,30,31,32,35,37,43,44,57,58,59,60,62,69,70,72,73,74,75,76,77,78,79,80,82,83,87,88,89,],[-4,56,-45,-46,-42,-43,-44,-26,-24,56,56,-39,-40,56,56,56,56,56,56,56,56,56,56,56,-37,-38,-41,-4,-4,56,-22,-23,]),'RC':([17,27,28,30,31,32,35,37,43,44,57,58,59,60,69,70,72,73,74,75,76,77,78,79,80,82,83,87,88,89,],[-4,-45,-46,-42,-43,-44,-26,-24,67,68,-39,-40,-29,80,-27,-28,-31,-32,-33,-34,-35,-36,-37,-38,-41,-4,-4,-30,-22,-23,]),'SC':([17,35,37,63,64,66,82,83,88,89,],[-4,-26,-24,82,83,84,-4,-4,-22,-23,]),'SO':([17,21,82,83,84,],[36,42,36,36,42,]),'CM':([19,20,21,40,41,65,84,90,],[39,-17,-4,-19,-20,-18,-4,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,],[1,]),'decl_list':([0,],[2,]),'empty':([0,17,21,82,83,84,],[3,37,41,37,37,41,]),'stmt_list':([2,13,],[4,33,]),'decl':([2,],[5,]),'stmt':([2,4,9,13,33,67,68,],[6,18,23,6,18,85,86,]),'type':([2,],[7,]),'assignment':([2,4,9,13,33,67,68,],[11,11,11,11,11,11,11,]),'id':([2,4,9,12,13,22,24,26,29,33,34,36,46,47,49,50,51,52,53,54,55,56,67,68,71,],[16,16,16,30,16,30,30,30,30,16,30,64,30,30,30,30,30,30,30,30,30,30,16,16,30,]),'var_list':([7,],[19,]),'var':([7,39,],[20,65,]),'exp':([12,22,24,26,29,34,46,47,49,50,51,52,53,54,55,56,71,],[25,43,44,59,60,62,69,70,72,73,74,75,76,77,78,79,87,]),'id_array':([17,82,83,],[35,88,89,]),'array':([21,84,],[40,90,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> decl_list stmt_list','prog',2,'p_prog','Lexical-Asignacion.py',171),
  ('decl_list -> empty','decl_list',1,'p_decl_list','Lexical-Asignacion.py',175),
  ('decl_list -> decl_list decl','decl_list',2,'p_decl_list','Lexical-Asignacion.py',176),
  ('empty -> <empty>','empty',0,'p_empty','Lexical-Asignacion.py',181),
  ('decl -> type var_list S','decl',3,'p_decl','Lexical-Asignacion.py',185),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list','Lexical-Asignacion.py',190),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','Lexical-Asignacion.py',191),
  ('stmt -> IF RO exp RC stmt','stmt',5,'p_stmt','Lexical-Asignacion.py',196),
  ('stmt -> ELSE stmt','stmt',2,'p_stmt','Lexical-Asignacion.py',197),
  ('stmt -> WHILE RO exp RC stmt','stmt',5,'p_stmt','Lexical-Asignacion.py',198),
  ('stmt -> assignment','stmt',1,'p_stmt','Lexical-Asignacion.py',199),
  ('stmt -> PRINT exp S','stmt',3,'p_stmt','Lexical-Asignacion.py',200),
  ('stmt -> BO stmt_list BC','stmt',3,'p_stmt','Lexical-Asignacion.py',201),
  ('assignment -> id EQ exp S','assignment',4,'p_assignment','Lexical-Asignacion.py',206),
  ('type -> INT_TYPE','type',1,'p_type','Lexical-Asignacion.py',222),
  ('type -> DOUBLE_TYPE','type',1,'p_type','Lexical-Asignacion.py',223),
  ('var_list -> var','var_list',1,'p_var_list','Lexical-Asignacion.py',228),
  ('var_list -> var_list CM var','var_list',3,'p_var_list','Lexical-Asignacion.py',229),
  ('var -> ID array','var',2,'p_var','Lexical-Asignacion.py',238),
  ('array -> empty','array',1,'p_array','Lexical-Asignacion.py',246),
  ('array -> SO INT SC array','array',4,'p_array','Lexical-Asignacion.py',247),
  ('id_array -> SO INT SC id_array','id_array',4,'p_id_array','Lexical-Asignacion.py',261),
  ('id_array -> SO id SC id_array','id_array',4,'p_id_array','Lexical-Asignacion.py',262),
  ('id_array -> empty','id_array',1,'p_id_array','Lexical-Asignacion.py',263),
  ('id -> ID','id',1,'p_id','Lexical-Asignacion.py',277),
  ('id -> ID id_array','id',2,'p_id','Lexical-Asignacion.py',278),
  ('exp -> exp AND exp','exp',3,'p_exp','Lexical-Asignacion.py',291),
  ('exp -> exp OR exp','exp',3,'p_exp','Lexical-Asignacion.py',292),
  ('exp -> NOT exp','exp',2,'p_exp','Lexical-Asignacion.py',293),
  ('exp -> exp EQ EQ exp','exp',4,'p_exp','Lexical-Asignacion.py',294),
  ('exp -> exp MIN exp','exp',3,'p_exp','Lexical-Asignacion.py',295),
  ('exp -> exp MAJ exp','exp',3,'p_exp','Lexical-Asignacion.py',296),
  ('exp -> exp MAJ_EQ exp','exp',3,'p_exp','Lexical-Asignacion.py',297),
  ('exp -> exp MIN_EQ exp','exp',3,'p_exp','Lexical-Asignacion.py',298),
  ('exp -> exp PLUS exp','exp',3,'p_exp','Lexical-Asignacion.py',299),
  ('exp -> exp MINUS exp','exp',3,'p_exp','Lexical-Asignacion.py',300),
  ('exp -> exp STAR exp','exp',3,'p_exp','Lexical-Asignacion.py',301),
  ('exp -> exp DIV exp','exp',3,'p_exp','Lexical-Asignacion.py',302),
  ('exp -> exp UMINUS','exp',2,'p_exp','Lexical-Asignacion.py',303),
  ('exp -> exp MINUS_ID','exp',2,'p_exp','Lexical-Asignacion.py',304),
  ('exp -> RO exp RC','exp',3,'p_exp','Lexical-Asignacion.py',305),
  ('exp -> id','exp',1,'p_exp','Lexical-Asignacion.py',306),
  ('exp -> INT','exp',1,'p_exp','Lexical-Asignacion.py',307),
  ('exp -> DOUBLE','exp',1,'p_exp','Lexical-Asignacion.py',308),
  ('exp -> UMINUS','exp',1,'p_exp','Lexical-Asignacion.py',309),
  ('exp -> MINUS_ID','exp',1,'p_exp','Lexical-Asignacion.py',310),
]
