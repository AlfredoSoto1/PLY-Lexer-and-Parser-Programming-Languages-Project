
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BC BO CM COMMENT DIV DOUBLE DOUBLE_TYPE ELSE EQ ID IF INT INT_TYPE MAJ MAJ_EQ MIN MINUS MIN_EQ NEWLINE NOT OR PLUS PRINT RC RO S SC SO STAR WHILE WHITESPACEprog : decl_list stmt_listdecl_list : empty\n        | decl_list decl\n    empty :decl : type var_list Sstmt_list : stmt_list stmt\n        | stmt\n    stmt : IF\n        | WHILE\n        | assignment\n        | PRINT\n        | BO stmt_list BC\n    assignment : id S\n        | id EQ exp S\n    type : INT_TYPE\n        | DOUBLE_TYPE\n    var_list : var\n        | var_list CM var\n    var : ID arrayarray : empty\n        | array SO INT SC\n    id : ID\n        | ID SO INT SC\n        | ID SO ID SC\n    exp : exp AND exp\n        | exp OR exp\n        | NOT exp\n        | exp EQ EQ exp\n        | exp MIN exp\n        | exp MAJ exp\n        | exp MAJ_EQ exp\n        | exp MIN_EQ exp\n        | exp PLUS exp\n        | exp MINUS exp\n        | exp STAR exp\n        | exp DIV exp\n        | RO exp RC\n        | id\n        | INT\n        | DOUBLE\n    '
    
_lr_action_items = {'IF':([0,2,3,4,5,6,8,9,10,11,12,17,21,22,25,29,41,],[-4,8,-2,8,-3,-7,-8,-9,-10,-11,8,-6,8,-13,-5,-12,-14,]),'WHILE':([0,2,3,4,5,6,8,9,10,11,12,17,21,22,25,29,41,],[-4,9,-2,9,-3,-7,-8,-9,-10,-11,9,-6,9,-13,-5,-12,-14,]),'PRINT':([0,2,3,4,5,6,8,9,10,11,12,17,21,22,25,29,41,],[-4,11,-2,11,-3,-7,-8,-9,-10,-11,11,-6,11,-13,-5,-12,-14,]),'BO':([0,2,3,4,5,6,8,9,10,11,12,17,21,22,25,29,41,],[-4,12,-2,12,-3,-7,-8,-9,-10,-11,12,-6,12,-13,-5,-12,-14,]),'INT_TYPE':([0,2,3,5,25,],[-4,13,-2,-3,-5,]),'DOUBLE_TYPE':([0,2,3,5,25,],[-4,14,-2,-3,-5,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,17,21,22,23,24,25,26,29,32,33,41,42,43,44,45,46,47,48,49,50,51,57,],[-4,16,-2,16,-3,-7,20,-8,-9,-10,-11,16,-15,-16,-6,16,-13,16,36,-5,20,-12,16,16,-14,16,16,16,16,16,16,16,16,16,16,16,]),'$end':([1,4,6,8,9,10,11,17,22,29,41,],[0,-1,-7,-8,-9,-10,-11,-6,-13,-12,-14,]),'BC':([6,8,9,10,11,17,21,22,29,41,],[-7,-8,-9,-10,-11,-6,29,-13,-12,-14,]),'S':([15,16,18,19,20,27,28,30,31,34,35,38,52,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,],[22,-22,25,-17,-4,-19,-20,-38,41,-39,-40,-18,-27,-24,-23,-25,-26,-29,-30,-31,-32,-33,-34,-35,-36,-37,-21,-28,]),'EQ':([15,16,30,31,34,35,40,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,70,],[23,-22,-38,40,-39,-40,57,40,40,-24,-23,40,40,40,40,40,40,40,40,40,40,-37,40,]),'AND':([16,30,31,34,35,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,70,],[-22,-38,42,-39,-40,42,42,-24,-23,42,42,42,42,42,42,42,42,42,42,-37,42,]),'OR':([16,30,31,34,35,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,70,],[-22,-38,43,-39,-40,43,43,-24,-23,43,43,43,43,43,43,43,43,43,43,-37,43,]),'MIN':([16,30,31,34,35,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,70,],[-22,-38,44,-39,-40,44,44,-24,-23,44,44,44,44,44,44,44,44,44,44,-37,44,]),'MAJ':([16,30,31,34,35,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,70,],[-22,-38,45,-39,-40,45,45,-24,-23,45,45,45,45,45,45,45,45,45,45,-37,45,]),'MAJ_EQ':([16,30,31,34,35,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,70,],[-22,-38,46,-39,-40,46,46,-24,-23,46,46,46,46,46,46,46,46,46,46,-37,46,]),'MIN_EQ':([16,30,31,34,35,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,70,],[-22,-38,47,-39,-40,47,47,-24,-23,47,47,47,47,47,47,47,47,47,47,-37,47,]),'PLUS':([16,30,31,34,35,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,70,],[-22,-38,48,-39,-40,48,48,-24,-23,48,48,48,48,48,48,48,48,48,48,-37,48,]),'MINUS':([16,30,31,34,35,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,70,],[-22,-38,49,-39,-40,49,49,-24,-23,49,49,49,49,49,49,49,49,49,49,-37,49,]),'STAR':([16,30,31,34,35,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,70,],[-22,-38,50,-39,-40,50,50,-24,-23,50,50,50,50,50,50,50,50,50,50,-37,50,]),'DIV':([16,30,31,34,35,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,70,],[-22,-38,51,-39,-40,51,51,-24,-23,51,51,51,51,51,51,51,51,51,51,-37,51,]),'RC':([16,30,34,35,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,70,],[-22,-38,-39,-40,-27,68,-24,-23,-25,-26,-29,-30,-31,-32,-33,-34,-35,-36,-37,-28,]),'SO':([16,20,27,28,69,],[24,-4,39,-20,-21,]),'CM':([18,19,20,27,28,38,69,],[26,-17,-4,-19,-20,-18,-21,]),'NOT':([23,32,33,42,43,44,45,46,47,48,49,50,51,57,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'RO':([23,32,33,42,43,44,45,46,47,48,49,50,51,57,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'INT':([23,24,32,33,39,42,43,44,45,46,47,48,49,50,51,57,],[34,37,34,34,56,34,34,34,34,34,34,34,34,34,34,34,]),'DOUBLE':([23,32,33,42,43,44,45,46,47,48,49,50,51,57,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'SC':([36,37,56,],[54,55,69,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,],[1,]),'decl_list':([0,],[2,]),'empty':([0,20,],[3,28,]),'stmt_list':([2,12,],[4,21,]),'decl':([2,],[5,]),'stmt':([2,4,12,21,],[6,17,6,17,]),'type':([2,],[7,]),'assignment':([2,4,12,21,],[10,10,10,10,]),'id':([2,4,12,21,23,32,33,42,43,44,45,46,47,48,49,50,51,57,],[15,15,15,15,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'var_list':([7,],[18,]),'var':([7,26,],[19,38,]),'array':([20,],[27,]),'exp':([23,32,33,42,43,44,45,46,47,48,49,50,51,57,],[31,52,53,58,59,60,61,62,63,64,65,66,67,70,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> decl_list stmt_list','prog',2,'p_prog','Lexical-Asignacion.py',150),
  ('decl_list -> empty','decl_list',1,'p_decl_list','Lexical-Asignacion.py',154),
  ('decl_list -> decl_list decl','decl_list',2,'p_decl_list','Lexical-Asignacion.py',155),
  ('empty -> <empty>','empty',0,'p_empty','Lexical-Asignacion.py',160),
  ('decl -> type var_list S','decl',3,'p_decl','Lexical-Asignacion.py',164),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list','Lexical-Asignacion.py',168),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','Lexical-Asignacion.py',169),
  ('stmt -> IF','stmt',1,'p_stmt','Lexical-Asignacion.py',174),
  ('stmt -> WHILE','stmt',1,'p_stmt','Lexical-Asignacion.py',175),
  ('stmt -> assignment','stmt',1,'p_stmt','Lexical-Asignacion.py',176),
  ('stmt -> PRINT','stmt',1,'p_stmt','Lexical-Asignacion.py',177),
  ('stmt -> BO stmt_list BC','stmt',3,'p_stmt','Lexical-Asignacion.py',178),
  ('assignment -> id S','assignment',2,'p_assignment','Lexical-Asignacion.py',183),
  ('assignment -> id EQ exp S','assignment',4,'p_assignment','Lexical-Asignacion.py',184),
  ('type -> INT_TYPE','type',1,'p_type','Lexical-Asignacion.py',189),
  ('type -> DOUBLE_TYPE','type',1,'p_type','Lexical-Asignacion.py',190),
  ('var_list -> var','var_list',1,'p_var_list','Lexical-Asignacion.py',195),
  ('var_list -> var_list CM var','var_list',3,'p_var_list','Lexical-Asignacion.py',196),
  ('var -> ID array','var',2,'p_var','Lexical-Asignacion.py',201),
  ('array -> empty','array',1,'p_array','Lexical-Asignacion.py',205),
  ('array -> array SO INT SC','array',4,'p_array','Lexical-Asignacion.py',206),
  ('id -> ID','id',1,'p_id','Lexical-Asignacion.py',211),
  ('id -> ID SO INT SC','id',4,'p_id','Lexical-Asignacion.py',212),
  ('id -> ID SO ID SC','id',4,'p_id','Lexical-Asignacion.py',213),
  ('exp -> exp AND exp','exp',3,'p_exp','Lexical-Asignacion.py',218),
  ('exp -> exp OR exp','exp',3,'p_exp','Lexical-Asignacion.py',219),
  ('exp -> NOT exp','exp',2,'p_exp','Lexical-Asignacion.py',220),
  ('exp -> exp EQ EQ exp','exp',4,'p_exp','Lexical-Asignacion.py',221),
  ('exp -> exp MIN exp','exp',3,'p_exp','Lexical-Asignacion.py',222),
  ('exp -> exp MAJ exp','exp',3,'p_exp','Lexical-Asignacion.py',223),
  ('exp -> exp MAJ_EQ exp','exp',3,'p_exp','Lexical-Asignacion.py',224),
  ('exp -> exp MIN_EQ exp','exp',3,'p_exp','Lexical-Asignacion.py',225),
  ('exp -> exp PLUS exp','exp',3,'p_exp','Lexical-Asignacion.py',226),
  ('exp -> exp MINUS exp','exp',3,'p_exp','Lexical-Asignacion.py',227),
  ('exp -> exp STAR exp','exp',3,'p_exp','Lexical-Asignacion.py',228),
  ('exp -> exp DIV exp','exp',3,'p_exp','Lexical-Asignacion.py',229),
  ('exp -> RO exp RC','exp',3,'p_exp','Lexical-Asignacion.py',230),
  ('exp -> id','exp',1,'p_exp','Lexical-Asignacion.py',231),
  ('exp -> INT','exp',1,'p_exp','Lexical-Asignacion.py',232),
  ('exp -> DOUBLE','exp',1,'p_exp','Lexical-Asignacion.py',233),
]
